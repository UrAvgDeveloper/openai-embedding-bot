title,text
Changelog,"Changelog. # Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog at https://keepachangelog.com/en/1.0.0/, and this project adheres to Semantic Versioning at https://semver.org/spec/v2.0.0.html. All logs must start with the format: [x.y.z] - yyyy-mm-dd"
Changelog,[Unreleased]. 
Changelog,"[1.6.0] - 2022-08-17. ,Changed: - Support new templates mono-repo structure. (#1236)"
Changelog,"[1.5.1] - 2022-08-11. ,Fixed: - Bump version for missing update in previous release."
Changelog,"[1.5.0] - 2022-08-04. ,Added: - Support for Algorand projects (#1228) ,Fixed: - Removing directory from starter templates (#1223)"
Changelog,"[1.4.0] - 2022-07-27. ,Added: redeploy deployment feature (#1205) - Rename flag to (#1205) ,Fixed: - Use latest runner validation from common package. (#1195)"
Changelog,"[1.3.1] - 2022-07-13. ,Fixed: - Added resolution to downgrade as we have not support ES module (1184) - Added encodedURI for project deployment key (#1183)"
Changelog,"[1.3.0] - 2022-07-12. ,Fixed: - CLI deployment when no dictionary or matching endpoint is provided (#1180) ,Added: - Storing ipfs-cid locally (#1169) - New Flag added to command allowing runner versions and endpoints to use default values from manifest (#1176) ,Changed: - Rename command back to (#1176)"
Changelog,"[1.2.1] - 2022-07-06. ,Added: - Add cosmos family to cli init (#1165)"
Changelog,"[1.2.0] - 2022-07-05. ,Fixed: - update common-avalanche,fix missing filter, asset and options (#1158) ,Changed: - Rename command to (#1149)"
Changelog,"[1.1.1] - 2022-06-29. ,Fixed: typo in publish log (#1135) ,Changed: - Update init and publish tests with manifest 1.0.0 (#1114)"
Changelog,"[1.1.0] - 2022-06-22. ,Changed: - Increase publish project body size up to 50mb (#1100) - Validate support multi networks, also support validate IPFS deployment. To validate project manifest spec version below 1.0.0, will require to provide (#1115) ,Added: avalanche and cosmos to publish (#1105) - Now cli able to manage deployment on host service, promote, deploy and delete (#1102)"
Changelog,"[1.0.1] - 2022-05-31. ,Fixed: - Fix cli init duplicate chainId and genesisHash (#1058)"
Changelog,"[1.0.0] - 2022-05-11. ,Fixed: - fix undefined file under chainTypes (#1010)"
Changelog,"[0.29.0] - 2022-05-11. ,Changed: - remove use manifest in codegen (#1001)"
Changelog,"[0.28.0] - 2022-05-06. ,Fixed: - Fix migrate missing chain types (#975) ,Changed: - Refactor init command and add network family (#979)"
Changelog,"[0.27.0] - 2022-05-02. ,Added: - Add utils package (#928)"
Changelog,"[0.26.1] - 2022-04-27. ,Added: - Support for Terra dynamic datasources (#899) ,Changed: - Output build errors (#901)"
Changelog,"[0.26.0] - 2022-04-26. ,Added: - Add manifest specVersion 1.0.0 template to command (#888) ,Changed: - Drop support for manifest 0.0.1 templates (#900)"
Changelog,"[0.25.0] - 2022-04-12. ,Changed: - Update @subql/common-terra to allow specifying a mantlemint endpoint (#885)"
Changelog,"[0.24.0] - 2022-04-06. ,Added: - Add support for manifest 1.0.0, migrate will now upgrade project to 1.0.0 (#845)"
Changelog,"[0.23.0] - 2022-03-22. ,Added: - Use to support terra contract handling (#848)"
Changelog,"[0.22.0] - 2022-03-01. ,Added: - Support terra in command line, add terra template (#781)"
Changelog,"[0.21.0] - 2022-02-24. ,Added: - Support cli publish from a manifest file (#800)"
Changelog,"[0.20.1] - 2022-02-15. ,Fixed: - Patch release with @subql/validator version bump, in order to fix validation issue."
Changelog,"[0.20.0] - 2022-02-09. ,Added: - Add support for dynamic data sources (#773) - Add authentication for publish command, access token will read from in environment or under (#778) ,Fixed: - Fix codegen importing jsonType interface multiple times (#784) - Fix cli build command issues (#789)"
Changelog,"[0.19.0] - 2022-01-21. ,Added: - Allow use self contained js as instructed by fields under (#753) ,Changed: - Remove .github directory from new projects (#763)"
Changelog,"[0.18.0] - 2022-01-18. ,Added: - Filter project templates by selected specVersion (#751)"
Changelog,"[0.17.0] - 2022-01-13. ,Added: - Warning and advice for use manifest specVersion v0.0.1 (#730) - Message for install git suggestion (#733) - Allow user to select templates when run (#712)"
Changelog,"[0.16.2] - 2021-12-16. ,Changed: - Update subql/validator dependencies (#720)"
Changelog,"[0.16.1] - 2021-11-30. ,Fixed: - Remove auto generated enum types and interfaces (#680)"
Changelog,"[0.16.0] - 2021-11-19. ,Fixed: - Fix migrate datasource entry path (#641) - Touch up command line description (#628) ,Changed: - Codegen controller using new type mappings (#532) - Update publish command to handle custom datasource (#641) - init command now create spec v0.2.0 project by default (#643) ,Added: - Support enums in codegen (#551)"
Changelog,"[0.15.0] - 2021-11-03. ,Changed: - Improve ts typing for function in model.ts template (#573) - Use jsonrpc client to fetch genesis hash , drop dependencies of polkadot-api (#595) - Update to validate custom ds (#596) - Bump dependencies (#584) ,Added: - New command allow convert project manifest v0.0.1 to v0.2.0 (#587)"
Changelog,"[0.14.0] - 2021-10-26. ,Added: publish CLI command which uploads a project to IPFS if it is using project manifest v0.2.0 (#486) ,Changed: - Update Polkadot/api to 6.5.2 (#564)"
Changelog,"[0.13.0] - 2021-10-12. ,Added: - Cli now support for manifest spec version (#495) - Expand on cli capabilities, default to not installing dependencies (#485)"
Changelog,"[0.12.0] - 2021-09-16. ,Added: - Adds command which webpacks the project code into a single file (#475)"
Changelog,"[0.11.2] - 2021-09-01. ,Fixed: - Fix codegen template for jsonField optional field (#459)"
Changelog,"[0.11.1] - 2021-08-27. ,Fixed: - Deprecated warnings (#448)"
Changelog,"[0.11.0] - 2021-08-20. ,Added: - Support Bytea type in Cli (#432)"
Changelog,"[0.10.0] - 2021-06-25. ,Changed: - Update dependencies (#358)"
Changelog,"[0.9.3] - 2021-05-04. ,Added: - Codegen will support indexed jsonb fields. No get methods will be created for such fields in the entity class. (#291)"
Changelog,"[0.9.2] - 2021-04-21. ,Added: - Codegen allow query by foreign key field (#285)"
Changelog,"[0.9.0] - 2021-04-19. ,Added: - annotation is now supported in (#255): - Can be added on any field of any entity except primary or foreign keys - will recognise it and create table with additional indexes to speed querying - Allow query by indexed field via (#271) - annotation is now supported in which allows you to store structured data JSON data in a single database field - We'll automatically generate coresponding JSON interfaces when querying this data (#275) - Read more about how you can use this in our updated docs at https://doc.subquery.network/create/graphql.html#json-type"
Changelog,"[0.8.0] - 2021-03-11. ,Added: - Update subquery repo path (#196) - codegen will create foreign key for relations: 1-1, and 1-N (#212) - codegen support type Boolean (#216) - add subcommand validate (#219)"
Changelog,"[0.7.3] - 2021-02-15. ,Changed: - bump dependencies (#148)"
Changelog,"[0.7.2] - 2021-02-03. ,Fixed: - fix yaml formatting problem in the starter scaffold generated by subql init (#140)"
Changelog,"[0.7.1] - 2021-01-27. ,Fixed: - add missing cli-ux dependency (#133)"
Changelog,"[0.7.0] - 2021-01-27. ,Added: - add user interaction for subql init (#118)"
Changelog,"[0.6.0] - 2021-01-21. ,Fixed: - read graphql schema from the location defined in project.yml (#105)"
Changelog,"[0.5.0] - 2021-01-15. ,Changed: - subql init doesn' need --starter by default (#86) - model template use bigint instead of BigInt (#82)"
Changelog,"[0.2.0] - 2020-12-22. ,Changed: - support subcommand codegen - support subcommand init [Unreleased]: https://github.com/subquery/subql/compare/cli/0.20.1...HEAD [0.20.1]: https://github.com/subquery/subql/compare/cli/0.20.0...cli/0.20.1 [0.20.0]: https://github.com/subquery/subql/compare/cli/0.19.0...cli/0.20.0 [0.19.0]: https://github.com/subquery/subql/compare/cli/0.18.0...cli/0.19.0 [0.18.0]: https://github.com/subquery/subql/compare/cli/0.17.0...cli/0.18.0 [0.17.0]: https://github.com/subquery/subql/compare/cli/0.16.2...cli/0.17.0 [0.16.2]: https://github.com/subquery/subql/compare/cli/0.16.1...cli/0.16.2 [0.16.1]: https://github.com/subquery/subql/compare/cli/0.16.0...cli/0.16.1 [0.16.0]: https://github.com/subquery/subql/compare/cli/0.15.0...cli/0.16.0 [0.15.0]: https://github.com/subquery/subql/compare/cli/0.14.0...cli/0.15.0 [0.14.0]: https://github.com/subquery/subql/compare/cli/0.13.0...cli/0.14.0 [0.9.2]: https://github.com/subquery/subql/compare/v0.9.0...v0.9.2 [0.9.0]: https://github.com/subquery/subql/compare/v0.8.0...v0.9.0 [0.8.0]: https://github.com/subquery/subql/compare/v0.7.3...v0.8.0 [0.7.3]: https://github.com/OnFinality-io/subql/compare/v0.7.2...v0.7.3 [0.7.2]: https://github.com/OnFinality-io/subql/compare/v0.7.1...v0.7.2 [0.7.1]: https://github.com/OnFinality-io/subql/compare/v0.7.0...v0.7.1 [0.7.0]: https://github.com/OnFinality-io/subql/compare/v0.6.0...v0.7.0 [0.6.0]: https://github.com/OnFinality-io/subql/compare/v0.5.0...v0.6.0 [0.5.0]: https://github.com/OnFinality-io/subql/compare/v0.2.0...v0.5.0"
Changelog,"Changelog. # Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog at https://keepachangelog.com/en/1.0.0/, and this project adheres to Semantic Versioning at https://semver.org/spec/v2.0.0.html. All logs must start with the format: [x.y.z] - yyyy-mm-dd"
Changelog,[Unreleased]. 
Changelog,"[1.2.0] - 2022-07-27. ,Changed: - Apply latest runner version validation rule, now and are not supported."
Changelog,"[1.1.1] - 2022-07-05. ,Changed: - Bump with"
Changelog,"[1.1.0] - 2022-05-31. ,Changed: - Remove and types improvements (#1012)"
Changelog,[1.0.0] - 2022-05-11. - Major release
Changelog,"[0.5.0] - 2022-05-11. ,Added: - Add test for project with ds processor assets (#1000) - Add method to check templates is Substrate ds (#1001)"
Changelog,"[0.4.0] - 2022-05-02. ,Added: - Add utils package (#928)"
Changelog,"[0.3.1] - 2022-04-27. ,Changed: - Add missing vm2 dependency (#919)"
Changelog,"[0.3.0] - 2022-04-06. ,Added: - Add manifest 1.0.0 (#845) ,Fixed: - Fix validation for genesisHash or chainId with empty string (#883)"
Changelog,"[0.2.0] - 2022-04-04. ,Changed: - Update to use (#869)"
Changelog,"[0.1.0] - 2022-03-01. ,Added: - init commit [Unreleased]: https://github.com/subquery/subql/compare/common-substrate/0.1.0...HEAD"
Changelog,"Changelog. # Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog at https://keepachangelog.com/en/1.0.0/, and this project adheres to Semantic Versioning at https://semver.org/spec/v2.0.0.html."
Changelog,[Unreleased]. 
Changelog,"[1.8.0] - 2022-08-17. ,Fixed: - Not parsing BigInt array entity fields correctly. (#1252) - Cache lookup error with worker threads due to schema migration changes. (#1250) ,Added: - Improved performance logging. (#1244) - and to the injected store. This can be used to optimise handlers and speed up indexing. (#1246)"
Changelog,"[1.7.0] - 2022-08-11. ,Changed: - Update Polkadot/api to v9 (#1234) - schema migration, allow user add/remove entity field after indexing started (#1226) ,Fixed: - Utilise dictionary if all block filters have set (#1232) - Bring back profiling fetchBlocksBatches, remove unnecessary await (#1235) - Fix running custom ds processors in parallel on different data (#1243)"
Changelog,"[1.6.1] - 2022-08-02. ,Fixed: - Fix one off events being missed on startup (#1224)"
Changelog,"[1.6.0] - 2022-07-27. ,Changed: - Make handler data types generic (#1194) ,Added: - [Experimental Feature] Support for worker threads. This will move block fetching and processing into a worker. It can increase performance by up to 4 times. By default, this feature is disabled. You can enable it with the flag. The number of workers will be capped to the number of CPU cores. (#1103) - [Experimental Feature] Add reindexing feature. You can use to remove indexed data and reindex from specified block height. Please note that the way of using this feature will be updated soon. (#1208) - Add block modulo filter on substrate blockHandler, E.g. if modulo: 50, the block handler will run on every 50 blocks. (#1196)"
Changelog,"[1.5.1] - 2022-07-15. ,Fixed: - Unable to create ds processor from template when project hosted on IPFS (#1190)"
Changelog,"[1.5.0] - 2022-07-12. ,Added: - add option , allow indexer decide timeout for query dictionary result (#1177) ,Changed: - Improve error log (#1174) - Update Polkadot to 8.12.2 (#1179)"
Changelog,"[1.4.1] - 2022-07-07. ,Fixed: - Fix oversize subscription notification trigger name (#1171)"
Changelog,"[1.4.0] - 2022-07-05. ,Fixed: - Fix DI issue with EventEmitter not being resolved (#1154) - Validate dictionary before use its specVersion (#1152) ,Changed: - use Http keepAlive and maxSockets, use http2 (#1150)"
Changelog,"[1.3.0] - 2022-06-29. ,Changed: - Update tests with Manifest v1.0.0 (#1114) - Update redecorate api, allow apiAt object to query data earlier than current indexing block (#1111) - Using chain block time as interval to fetch latest finalized and best block height (#1134) ,Fixed: - Fix set block offset twice issue (#1133) - Fix warning for fetch specVersion when dictionary undefined, and tidy up logs (#1127) - Fix pending data being used when it should be reset with new DS (#1140)"
Changelog,"[1.2.1] - 2022-06-22. ,Fixed: - Handle when templates are undefined"
Changelog,"[1.2.0] - 2022-06-22. ,Added: - Use dictionary SpecVersion map (#1046) - Support dictionary for dynamic ds (#1110) ,Changed: - Split setup code from indexer manager to another service (#1092) ,Fixed: - Handle when specVersion query response is undefined (#1097) - Fix templates not being processed for manifest v1.0.0 (#1116)"
Changelog,"[1.1.2] - 2022-06-02. ,Fixed: handle multi datasources with different start block height (#1091)"
Changelog,"[1.1.1] - 2022-06-01. ,Fixed: - Fix disabling historical (#1085) - Fix benchmark logging (#1083)"
Changelog,"[1.1.0] - 2022-05-31. ,Fixed: - Move POI logic under option check (#1064) ,Added: - Add api to query file based mmr (#968) - Experimental feature: Support query by block number (#992) ,Changed: Remove to subquery/datasource-processors at https://github.com/subquery/datasource-processors, types improvements and support for datasource processors v1.0.0 (#1012)"
Changelog,[1.0.0] - 2022-05-11. - Major release
Changelog,"[0.35.2] - 2022-05-10. ,Fixed: - Events being handled multiple times (#994)"
Changelog,"[0.35.1] - 2022-05-06. ,Changed: - Bump with"
Changelog,"[0.35.0] - 2022-05-02. ,Added: - Add utils package (#928) ,Fixed: - Handle undefined filters (#929) ,Changed: - Update polkadot 8.2.1 (#910)"
Changelog,"[0.34.0] - 2022-04-26. ,Changed: - Remove notify trigger if subscription disabled (#882) - Drop support for manifest v0.0.1 (#900) - Process block content in time secquence rather than ds/handler order (#853) ,Fixed: the mmr inconsistent value issue, remove redundant code, and set value to the first store operation blockHeight -1 (#894)"
Changelog,"[0.33.0] - 2022-04-06. ,Added: - Add support for handle manifest 1.0.0 (#845)"
Changelog,"[0.32.0] - 2022-04-04. ,Changed: - Update to use (#869) - Update Polkadot/api to 7.14.3 (#866) - move subscription to dedicate flag (#867)"
Changelog,"[0.31.1] - 2022-03-23. ,Fixed: - Fix subscription notification trigger name invalid issue(#862)"
Changelog,"[0.31.0] - 2022-03-22. ,Changed: - Update Polkadot/api to 7.12.1 (#849) ,Added: - Add Notification Trigger in order to support GraphQL subscription (#846)"
Changelog,"[0.30.2] - 2022-03-15. ,Fixed: - Fix unable able fetch with small batch size issue (#847)"
Changelog,"[0.30.1] - 2022-03-10. ,Fixed: - Fix enum sort order (#844)"
Changelog,"[0.30.0] - 2022-03-01. ,Changed: - Update imports, as substrate related components now will be imported from . (#781)"
Changelog,"[0.29.1] - 2022-02-23. ,Fixed: - Fix get default subquery name (#820)"
Changelog,"[0.29.0] - 2022-02-23. ,Changed: - Update Polkadot/api to 7.9.1 (#815) - Support node indexing from a manifest file (#800)"
Changelog,"[0.28.2] - 2022-02-16. ,Changed: - Update Polkadot/api to 7.8.1 ,in order to resolve previous release issue (#806)"
Changelog,"[0.28.1] - 2022-02-15. ,Fixed: issue that node stop fetch block when set batch size to 1. (#802)"
Changelog,"[0.28.0] - 2022-02-09. ,Added: - Support running the indexer from locations other than the filesystem, and refactor class (#511) - Add support for index dynamic datasources (#773) - Add support for historical RPC methods that use BlockNumber (#788) ,Changed: - Update Polkadot/api to 7.7.1 (#787) ,Fixed: mmr initialization start height issue (#600)"
Changelog,"[0.27.2] - 2022-01-23. ,Changed: - Update Polkadot/api to 7.4.1 (#757) ,Fixed: - Fix genesis hash validation for manifest v0.0.1 (#762)"
Changelog,"[0.27.1] - 2022-01-18. ,Changed: - Ready endpoint return code (#750)"
Changelog,"[0.27.0] - 2022-01-13. ,Changed: - Deprecate local mode (#725) - Update Polkadot/api to 7.3.1 (#745) ,Added : - Add ready status of indexer to endpoint (#728) - Add option, auto find available port when the default one is occupied. (#739)ss ,Fixed: - Fix handle chainTypes error (#732) - Try catch on init api with chainTypes (#738) - Verify project store genesis hash with network genesis hash, instead of check specName only (#735) - Remove update metadata last processed block by interval (#740) - Use Promise.all for set metadata (#743)"
Changelog,"[0.26.0] - 2021-12-16. ,Added: - Support dictionary for custom datasource (#686) - Automatic adjust fetched block batch size based on memory usage, enable by passing (#668) - Depreciate subqueries table (#683) - Add to (#699) - Add support for loading chaintypes from js (#698) ,Fixed: - Fix name escaping with db queries (#702) - Fix value representation (#711)"
Changelog,"[0.25.3] - 2021-12-02. ,Fixed:: - Skip insert poi when db transaction is null (#687) - Replace enum index with unique hash value, in order resolve schema type name conflict issue.(#688)"
Changelog,"[0.25.2] - 2021-11-30. ,Fixed:: - Upgrade dependency common, in order to remove auto generated enum types from entities relations (#682)"
Changelog,"[0.25.1] - 2021-11-27. ,Fixed:: - Fix variable replacement in dictionary's gql, remove the quote wrapping (#673) ,Changed:: - set default false for (#661)"
Changelog,"[0.25.0] - 2021-11-19. ,Fixed: : - Fix publish failing with custom ds and assets (#610) - Support for enum, add into store and store operations (#551) ,Added:: - Allow running node from a different port through flag (#618) - Add flag , force clean the database, dropping project schemas and tables (#619) - Add flag for subql/node (#629) ,Changed:: - Merge metadata from query and node (#555) - Refactor dictionary gql queries (#613) - Use types mapping in storeOperation (#532) - Replace patch api with (#638) - Update polkadot api to 6.9.2 (#648)"
Changelog,"[0.24.0] - 2021-11-03. ,Added: - [custom ds] Read and feed assets to custom ds's (#547) - Improve error msg when fetch block fails (#602) ,Changed: - Bump dependencies (#584) - Moonbeam EVM, filter before transforming with custom datasource (#593) - Update Polkadot/api to 6.6.1 (#599) ,Fixed: - Moonbeam networks shows negative bps and fail Healthy checks (#589)"
Changelog,"[0.23.1] - 2021-10-27. ,Fixed: - Disable the profiler on health check and remove logs (#569)"
Changelog,"[0.23.0] - 2021-10-26. ,Added: - Add MMR service allow to acquire Proof of index information and generate Merkle mountain range root, create and store root value in a file-based database, simultaneously it updates in the corresponding MMR value in the table. This feature will be running along with the Proof of index service, also allow the user to specify a local path for .mmr by using flag . (#488) - Introduce custom datasource (beta), enable subql to support a vary kind of smart contract solutions that embedded in parachains (#512) ,Changed: - Update Polkadot/api to 6.5.2 (#564) ,Fixed: - Performance improvement (#565)"
Changelog,"[0.22.0] - 2021-10-12. ,Changed: - Update Polkadot/api to 6.3.1 to support metadata v14 (#505) - Fetch service improve logs to include block height，it threw error at the time (#492) ,Fixed: - Throw errors when connection dropped by http, and exit (#519) - Addition fix for Poi service with if condition (#508) ,Added: - Support project manifest 0.2.0 (#495)"
Changelog,"[0.21.1] - 2021-09-18. ,Fixed: apollo/client dependency issue (#482)"
Changelog,"[0.21.0] - 2021-09-16. ,Changed: - Update Polkadot/api to 5.9.1 (#476) ,Added: - Api service support http(s) endpoint (#474) - Add Proof-of-index service allow generate and record the hash of indexed work. User can enable this feature through the command. Please note that this feature is currently in an experimental stage. (#443)"
Changelog,"[0.20.3] - 2021-09-01. ,Changed: - Update Polkadot/api to 5.7.1 (#460)"
Changelog,"[0.20.2] - 2021-08-28. ,Fixed: - Solve the missing block height of the event/extrinsic in the batch returned by the dictionary service (#452)"
Changelog,"[0.20.1] - 2021-08-27. ,Fixed: - Deprecated warnings (#448)"
Changelog,"[0.20.0] - 2021-08-20. ,Changed: - Update Polkadot/api to 5.5.2 (#439) ,Added: - support interpret Bytea type (#432)"
Changelog,"[0.19.2] - 2021-08-16. ,Fixed: - Improve data sources filtering handling and error messages (#417) ,Changed: - Adjust health check time to be the same as indexer timeout, or a minimum of 900 seconds. Also, log error when it is not healthy (#420) - Update Polkadot/api to 5.5.1 (#433)"
Changelog,"[0.19.1] - 2021-07-29. ,Fixed: - When the schema object type is an array convert to Jsonb type (#406)"
Changelog,"[0.19.0] - 2021-07-27. ,Changed: - Bump to 5.2.1 (#402) ,Fixed: - Disable in patched API (#402) - Fix to improve snake case handling for foreign keys and unique index constraint (#382) - Fix so that it displays full options (#396) ,Added: - Expose best block height in meta (#392)"
Changelog,"[0.18.0] - 2021-07-06. ,Fixed: - Fix metric listener handle skip dictionary (#380)"
Changelog,"[0.17.4] - 2021-07-06. ,Fixed: - Fix problem when filling the block number buffer missing the last number which has caused some block records are missing. (#378)"
Changelog,"[0.17.3] - 2021-07-06. ,Fixed: bug that prevented indexes from being added automatically on foreign keys (#371) ,Added: - add profiler to monitoring indexer performance (#369) - add metrics to listen status of using dictionary and number of times it been skipped. (#369)"
Changelog,"[0.17.2] - 2021-07-01. ,Fixed: - fix get runtimeVersion failed when fetch service initialization (#367) - set useDictionary to false when one of the event/extrinsic filters are not provided (#367)"
Changelog,"[0.17.1] - 2021-06-29. ,Fixed: - Fix an edge case for dictionary query, add blocknumber max range to speed up dictionary (#365)"
Changelog,"[0.17.0] - 2021-06-25. ,Added: - Add an external dictionary feature to massively improve indexing speed. - Enable by or in - read more at https://doc.subquery.network/run/run.html#using-a-dictionary (#342) - Add dictionary service to fetch dictionary from external GraphQL API (#342) - Add additional block number buffer in fetch service to handle incoming dictionary data (#342) ,Changed: - replace vm2 with @subql/x-vm2 (#358) - Update other dependencies (#358)"
Changelog,"[0.16.2] - 2021-06-28. ,Changed: - Bump polkadot/api to 4.16.2 (#363)"
Changelog,"[0.16.1] - 2021-06-22. ,Added: - Add arg for enable/disable timestamp created_at and updated_at though (#352)"
Changelog,"[0.16.0] - 2021-06-22. ,Changed: - metadata expose last processed block (#327) - Remove created_at and updated_at from table (#343) - Bump polkadot/api to 4.15.1 (#350)"
Changelog,"[0.15.1] - 2021-05-27. ,Changed: - Bump polkadot/api to 4.11.2"
Changelog,"[0.15.0] - 2021-05-24. ,Changed: - Bump polkadot/api to 4.11.1 ,Fixed: - Skip fetch finalized block until API is ready. - Fix indexes detection"
Changelog,"[0.14.0] - 2021-05-19. ,Fixed: - Use pull instead of subscribe to get new block height. This solves issues where the subscription stalls and SubQuery reports an incorrect block height. ,Changed: - Not all are banned now, historical RPC methods can be called. See the docs link at https://doc.subquery.network/create/mapping.html#rpc-calls (#304) - Bump polkadot/api dependency (#310) - Replace vm2 with fork to support lib like that uses esm as default (#311)"
Changelog,"[0.13.0] - 2021-05-06. ,Added: - Bump release version due to recent major updates, also need publish new release to npm."
Changelog,"[0.12.3] - 2021-05-04. ,Added: - Automatically verifies that a model's indexed fields are supported by extracting indexed fields from the database (#289) - [Experimental Feature] We're removed the restrictions on using third party CommonJS libraries in your SubQuery project sandbox - please read more about this in our updated documentation at https://doc.subquery.network/create/mapping.html##modules-and-libraries (#292) - Support for more NodeJS modules (, , , , and ) (#294)"
Changelog,"[0.12.2] - 2021-04-21. ,Added: - Enforce index on foreign key field (#285) ,Fixed: - Improve logs for db sync, catch error and exit (#283)"
Changelog,"[0.12.0] - 2021-04-20. ,Fixed: - Bump dependencies for logger - Fix query for double map storage (#269) ,Added: - Support network filter for dataSources (#247) - Expose events in SubstrateBlock (#256) - api.findCall and api.findError will use current block's metadata (#251) - Inject global variable logger in sandbox and depricated console.log in subquery project, use logger instead. (#259) - Create indexes on the fields with @index and allow querying by indexed field (#271) - Create jsonb column for fields marked as jsonField in schema.graphql (#275) - Bump @polkadot/api version to v4.6.2"
Changelog,"[0.11.0] - 2021-03-25. ,Fixed: - Fix benchmark output format issues (#235) - Only warning when user set start block to number smaller than 1. (#239) ,Added: - Support entity relations (#132) - Refactor api.query...multi(), api.queryMulti() to use rpc.queryStorageAt() (#244)"
Changelog,"[0.10.2] - 2021-03-11. ,Added: - refactor logger to @subql/common (#220) - Bump polkadot/js version to v4.0.3 which shall fix a chain data decoding issue (#222)"
Changelog,"[0.10.1] - 2021-03-03. ,Fixed: - use parent's specVersion to decide if metadata need to be injected (#211)"
Changelog,"[0.10.0] - 2021-03-03. ,Added: - performance improvement: reduce injectMetadata call (#206) - performance improvement: reduce specVersion query for each batch (#207)"
Changelog,"[0.9.2] - 2021-03-03. ,Added: - more comprehensive timeout error stack (#198) - use logger.info() instead of log() for sandbox logging (#197) - estimate time remaining consider block increases (#199) - add configurable timeout (#202) - bump @polkadot/api to 3.11.1 (#203)"
Changelog,"[0.9.1] - 2021-03-03. ,Fixed: - revert metrics name changes (#193) ,Added: - Update subquery starter repo path to new organization (#196)"
Changelog,"[0.9.0] - 2021-02-23. ,Added: - Ian improve error logging (#181): support --log-level flag, error stack will be correctly organized - Add benchmark outputs (#183): will print benchmark stats every 15s - add meta api and store network info in subqueries table (#191) ,Fixed: - fix memory overflow and timeouts while indexing a large number of events"
Changelog,"[0.8.3] - 2021-02-17. ,Fixed: - keep retrying failed block not skipping it (#175)"
Changelog,"[0.8.2] - 2021-02-16. ,Fixed: - fix query.system.lastRuntimeUpgrade return null before the first runtime upgrade, use rpc.state.getRuntimeVersion instead (#169) - after connection reconnected, indexing will now resume (#168)"
Changelog,"[0.8.1] - 2021-02-15. ,Fixed: - fix dependencies (#164)"
Changelog,"[0.8.0] - 2021-02-15. ,Changed: - bump dependencies - don't freeze table name (#161) ,Added: - cache metadata if specVersion bumped (#156) - improve logging, support --output-fmt=json (#158) - support override network endpoint from --network-endpoint flag (#157) - add prometheus metrics (#159)"
Changelog,"[0.7.0] - 2021-01-27. ,Fixed: - fix crash for events not own by extrinsic (#120) ,Added: - batch fetch blocks (#124) - wrap all handler executions of same block in a db transaction (#125) - node add startscript (#128)"
Changelog,"[0.6.0] - 2021-01-25. ,Changed: - bump @polkadot/api (#90) - clean up console output unless start with --debug (#95) - bump @polkadot/api to v3.6.3 (#109) ,Added: - patch and inject api in sandbox context (#103) - support specVersion filter and success filter (#106) - support other custom types option that @polkadot/api has (#107)"
Changelog,"[0.5.0] - 2021-01-15. ,Fixed: - Fix BigInt transformation (#79) ,Changed: - escalate sandbox out of IndexerManager (#83)"
Changelog,"[0.4.0] - 2021-01-12. ,Added: - allow user to define start block in project (#54) - add local flag to support create all tables in the default db schema (#59) - retry when can not establish connection with postgres (#61) - add priority to find subquery project entry point from package json file (#60) - support load project from tarball file (#55) ,Fixed: - read db connection strings from env (#63) ,Changed: - [BREAKING] project manifest spec updated to support custom types (#65)"
Changelog,"[0.3.0] - 2021-01-06. ,Added: - support callHandler and eventHandler (#47)"
Changelog,"[0.2.0] - 2020-12-22. ,Added: - support block handler - put subquery tables in their own db schema - use BigInt instead of BN (#27) ,Changed: - bump @polkadot/api to 3.1.1 [Unreleased]: https://github.com/subquery/subql/compare/node/0.30.1...HEAD [0.30.1]: https://github.com/subquery/subql/compare/node/0.30.0...node/0.30.1 [0.30.0]: https://github.com/subquery/subql/compare/node/0.29.1...node/0.30.0 [0.29.1]: https://github.com/subquery/subql/compare/node/0.29.0...node/0.29.1 [0.29.0]: https://github.com/subquery/subql/compare/node/0.28.2...node/0.29.1 [0.28.2]: https://github.com/subquery/subql/compare/node/0.28.1...node/0.28.2 [0.28.1]: https://github.com/subquery/subql/compare/node/0.28.0...node/0.28.1 [0.28.0]: https://github.com/subquery/subql/compare/node/0.27.2...node/0.28.0 [0.27.2]: https://github.com/subquery/subql/compare/node/0.27.1...node/0.27.2 [0.27.1]: https://github.com/subquery/subql/compare/node/0.27.0...node/0.27.1 [0.27.0]: https://github.com/subquery/subql/compare/node/0.26.0...node/0.27.0 [0.26.0]: https://github.com/subquery/subql/compare/node/0.25.3...node/0.26.0 [0.25.3]: https://github.com/subquery/subql/compare/node/0.25.2...node/0.25.3 [0.25.2]: https://github.com/subquery/subql/compare/node/0.25.1...node/0.25.2 [0.25.1]: https://github.com/subquery/subql/compare/node/0.25.0...node/0.25.1 [0.25.0]: https://github.com/subquery/subql/compare/node/0.24.0...node/0.25.0 [0.24.0]: https://github.com/subquery/subql/compare/node/0.23.1...node/0.24.0 [0.23.1]: https://github.com/subquery/subql/compare/node/0.23.0...node/0.23.1 [0.23.0]: https://github.com/subquery/subql/compare/v0.16.0...v0.16.1 [0.22.0]: https://github.com/subquery/subql/compare/v0.16.0...v0.16.1 [0.21.1]: https://github.com/subquery/subql/compare/v0.16.0...v0.16.1 [0.21.0]: https://github.com/subquery/subql/compare/v0.16.0...v0.16.1 [0.20.3]: https://github.com/subquery/subql/compare/v0.16.0...v0.16.1 [0.20.2]: https://github.com/subquery/subql/compare/v0.20.1...v0.20.2 [0.20.1]: https://github.com/subquery/subql/compare/v0.20.0...v0.20.1 [0.20.0]: https://github.com/subquery/subql/compare/v0.19.2...v0.20.0 [0.19.2]: https://github.com/subquery/subql/compare/v0.19.1...v0.19.2 [0.19.1]: https://github.com/subquery/subql/compare/v0.19.0...v0.19.1 [0.19.0]: https://github.com/subquery/subql/compare/v0.18.0...v0.19.0 [0.18.0]: https://github.com/subquery/subql/compare/v0.17.4...v0.18.0 [0.17.4]: https://github.com/subquery/subql/compare/v0.17.3...v0.17.4 [0.17.3]: https://github.com/subquery/subql/compare/v0.17.2...v0.17.3 [0.17.2]: https://github.com/subquery/subql/compare/v0.17.1...v0.17.2 [0.17.1]: https://github.com/subquery/subql/compare/v0.17.0...v0.17.1 [0.17.0]: https://github.com/subquery/subql/compare/v0.17.0...v0.17.0 [0.16.2]: https://github.com/subquery/subql/compare/v0.16.1...v0.16.2 [0.16.1]: https://github.com/subquery/subql/compare/v0.16.0...v0.16.1 [0.16.0]: https://github.com/subquery/subql/compare/v0.15.1...v0.16.0 [0.15.1]: https://github.com/subquery/subql/compare/v0.15.0...v0.15.1 [0.15.0]: https://github.com/subquery/subql/compare/v0.14.0...v0.15.0 [0.14.0]: https://github.com/subquery/subql/compare/v0.13.0...v0.14.0 [0.13.0]: https://github.com/subquery/subql/compare/v0.12.3...v0.13.0 [0.12.3]: https://github.com/subquery/subql/compare/v0.12.2...v0.12.3 [0.12.2]: https://github.com/subquery/subql/compare/v0.12.0...v0.12.2 [0.12.0]: https://github.com/subquery/subql/compare/v0.11.0...v0.12.0 [0.11.0]: https://github.com/subquery/subql/compare/v0.10.2...v0.11.0 [0.10.2]: https://github.com/subquery/subql/compare/v0.10.1...v0.10.2 [0.10.1]: https://github.com/subquery/subql/compare/v0.10.0...v0.10.1 [0.10.0]: https://github.com/subquery/subql/compare/v0.9.2...v0.10.0 [0.9.2]: https://github.com/subquery/subql/compare/v0.9.1...v0.9.2 [0.9.1]: https://github.com/subquery/subql/compare/v0.9.0...v0.9.1 [0.9.0]: https://github.com/OnFinality-io/subql/compare/v0.8.3...v0.9.0 [0.8.3]: https://github.com/OnFinality-io/subql/compare/v0.8.2...v0.8.3 [0.8.2]: https://github.com/OnFinality-io/subql/compare/v0.8.1...v0.8.2 [0.8.1]: https://github.com/OnFinality-io/subql/compare/v0.8.0...v0.8.1 [0.8.0]: https://github.com/OnFinality-io/subql/compare/v0.7.0...v0.8.0 [0.7.0]: https://github.com/OnFinality-io/subql/compare/v0.6.0...v0.7.0 [0.6.0]: https://github.com/OnFinality-io/subql/compare/v0.5.0...v0.6.0 [0.5.0]: https://github.com/OnFinality-io/subql/compare/v0.4.0...v0.5.0 [0.4.0]: https://github.com/OnFinality-io/subql/compare/v0.3.0...v0.4.0 [0.3.0]: https://github.com/OnFinality-io/subql/compare/v0.2.0...v0.3.0"
Changelog,"Changelog. # Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog at https://keepachangelog.com/en/1.0.0/, and this project adheres to Semantic Versioning at https://semver.org/spec/v2.0.0.html. All logs must start with the format: [x.y.z] - yyyy-mm-dd"
Changelog,[Unreleased]. 
Changelog,[0.2.0] - 2022-07-08. 
Changelog,Changed. - Decode buffer to json for and messages (#38)
Changelog,"[0.1.3] - 2022-07-01. ,Fixed: - Dependency injection issue with EventEmitter"
Changelog,"[0.1.2] - 2022-07-01. ,Fixed: - Docker image health checks failing because of missing command ,Added: - Inject the types registry into the sandbox (#34)"
Changelog,"[0.1.1] - 2022-06-29. ,Updated: - Sync with latest development from origin (#31) ,Added: - HTTP keep alive (#30)"
Changelog,"[0.1.0] - 2022-06-27. ,Breaking changes: - Messages and events have changed to . This is due to lazy loading and will mean you don't need to provide chain types for messages you don't care about - Dictionary structure has changed ,Fixed: - Loading chainTypes that referred to other files (#28) - Dictionary queries, this also required a new dictionary (#26) ,Updated: - Sync with latest development from origin (#27) ,Added: - Support for nested filters (#21) - Support for enum contract call (#23) - Lazy decoding of messages (#17)"
Changelog,"[0.0.7] - 2022-06-21. ,Fixed: - Handle JSON variable types in dictionary (#24) - Dictionary message filter being undefined"
Changelog,"[0.0.6] - 2022-06-17. ,Fixed: - Use modified tendermint-rpc to avoid Juno block 3103475"
Changelog,[0.0.5] - 2022-06-15. First release [Unreleased]: https://github.com/subquery/subql-cosmos/compare/node/0.2.0...HEAD [0.2.0]: https://github.com/subquery/subql-cosmos/compare/node/0.1.3...node/0.2.0 [0.1.3]: https://github.com/subquery/subql-cosmos/compare/node/0.1.2...node/0.1.3 [0.1.2]: https://github.com/subquery/subql-cosmos/compare/node/0.1.1...node/0.1.2 [0.1.1]: https://github.com/subquery/subql-cosmos/compare/node/0.1.0...node/0.1.1 [0.1.0]: https://github.com/subquery/subql-cosmos/compare/node/0.0.7...node/0.1.0 [0.0.7]: https://github.com/subquery/subql-cosmos/compare/node/0.0.6...node/0.0.7 [0.0.6]: https://github.com/subquery/subql-cosmos/compare/node/0.0.5...node/0.0.6
pull_request_template,pull_request_template. _\<replace with pull request description>_ ---
pull_request_template,"Code Review Checklist (to be filled out by reviewer). - [ ] Description accurately reflects what changes are being made. - [ ] Either the PR references an issue (via the ""Development"" combobox) or the description explains the need for the changes. - [ ] The PR appropriately sized. - [ ] The PR contains an idempotent DB migration. - [ ] I have verified the correctness of the DB migration using relevant data (e.g. test-generated data). - [ ] New code has enough tests. - [ ] New code has enough documentation to answer ""how do I use it?"" and ""what does it do?"". - [ ] Existing documentation is up-to-date, if impacted."
DEVELOPING,DEVELOPING. 
DEVELOPING,"Development setup. The easiest way to get set up for development is to install Python (, , or ) and poetry at https://pypi.org/project/poetry/, and then run the following from the top-level project directory:"
DEVELOPING,"Development commands. Following are some helpful commands for development: - To run the code formatter: - To run lint checks: - To run tests: Before committing and opening a PR, use the above commands to run the checks locally. This saves CI hours and ensures you only commit clean code."
Contributing,"Contributing. # Contributing Contributions to this library are welcome. - If you want to report a bug or ask for features, you can check the Issues page at https://github.com/fetchai/uAgents/issues and raise an issue. - If you would like to contribute a bug fix or feature then submit a Pull request at https://github.com/fetchai/uAgents/pulls."
Contributing,"A few simple rules. - Before working on a feature, reach out to one of the core developers or discuss the feature in an issue. The framework caters a diverse audience and new features require upfront coordination. - Include unit tests when you contribute new features, as they help to a) prove that your code works correctly, and b) guard against future breaking changes to lower the maintenance cost. - Bug fixes also generally require unit tests, because the presence of bugs usually indicates insufficient test coverage. - Keep API compatibility in mind when you change code in . Above version , breaking changes can happen across versions with different left digit. Below version , they can happen across versions with different middle digit. Reviewers of your pull request will comment on any API compatibility issues. - When you contribute a new feature to , the maintenance burden is transferred to the core team. This means that the benefit of the contribution must be compared against the cost of maintaining the feature. - Where possible, extend existing features instead of replacing one. - Before committing and opening a PR, run all tests locally. This saves CI hours and ensures you only commit clean code."
Contributing,"Contributing code. If you have improvements, send us your pull requests! A team member will be assigned to review your pull requests. All tests are run as part of CI as well as various other checks (linters, static type checkers, etc). If there are any problems, feedback is provided via GitHub. Once the pull requests is approved and passes continuous integration checks, you or a team member can merge it. If you want to contribute, start working through the codebase, navigate to the Github Issues page at https://github.com/fetchai/uAgents/issues tab and start looking through interesting issues. If you decide to start on an issue, leave a comment so that other people know that you're working on it. If you want to help out, but not alone, use the issue comment thread to coordinate."
Contributing,"Commits and PRs. This project uses Conventional Commits to generate release notes and to determine versioning. Commit messages should adhere to this standard and be of the form: Further details on can be found here: <https://www.conventionalcommits.org/en/v1.0.0/> When merging a branch, PRs should be squashed into one conventional commit by selecting the option. This ensures Release notes are useful and readable when releases are created. <!-- --> <img src=""https://docs.github.com/assets/images/help/pull_requests/select-squash-and-merge-from-drop-down-menu.png"" alt=""drawing"" style=""width:600px;""/>"
Introduction,Introduction. # Introduction The **μAgents** (micro-Agents) project is a fast and lightweight framework that makes it easy to build agents for all kinds of decentralised use cases.
Introduction,"Why use μAgents?. Here are a few of the reasons to build with μAgents. They are: - **easy to learn**: follow our quick start guides to install at installation.md the Python package and create an agent at run-agent.md in just a few minutes. - **customizable**: create any type of agent you can think of and put into code. - **connected**: on startup, each agent automatically joins the fast growing network of μAgents by registering on the Almanac at almanac-overview.md, a smart contract deployed on the Fetch.ai blockchain. - **secure**: μAgent messages and wallets are cryptographically secured, so their identities and assets are protected. - **platform and language independent**: though initially launched as a Python library, the exchange protocol is defined in terms of standard data types, and since it is a lightweight framework, expect packages to appear in other languages very soon."
Registration,"Registration. # Registration Agent registration in the almanac-contract is a key part for remote agents communication. To be found by other μAgents, each μAgent needs to register (paying a small fee) in the almanac contract using their agent address at addresses.md. Therefore, your agents need to have funds available in their Fetch address at addresses.md. When using the testnet, you can use the function to fund your agent: This function will check if you have enough tokens to register in the . If not it will add tokens to your Fetch address at addresses.md. Make sure to add a to your agent so you don't have to fund different addresses each time you run your agent. μAgents can communicate by querying the and retrieving an HTTP endpoint from the recipient μAgent. Therefore, we need to specify the service endpoints at almanac-endpoint.md when defining an agent: Here we defined a local http address, but you could also define a remote address to allow agent communication over different machines through the internet."
Running an agent,Running an agent. # Running an agent
Running an agent,"Create the agent. You can create your first μAgent by building a Python script with the following steps: It is optional but useful to include a parameter when creating an agent to set fixed addresses at addresses.md. Otherwise, random addresses will be generated every time you run the agent."
Running an agent,"Give the agent something to do. Let's start with a simple task of saying hello every 2 seconds: The object is a collection of data and functions related to the agent. In this case, we just use the agent's name."
Running an agent,"Run the agent. You can now run your first μAgent! !!! example ""Run your agent"" After a few lines in the agent's logs, you should see the following text printed on your terminal: <div id=""termynal1"" data-termynal data-ty-typeDelay=""100"" data-ty-lineDelay=""2000""> <span data-ty>hello, my name is alice.</span> <span data-ty>hello, my name is alice.</span> <span data-ty>hello, my name is alice.</span> <span data-ty>...</span> </div>"
