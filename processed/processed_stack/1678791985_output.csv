title,text
how_to_convert_fet,"how_to_convert_fet. On this page, you can find instructions on how to convert ERC-20 and native FETs to each other."
how_to_convert_fet,"Native to ERC-20 FET. 1. Ensure you have the Fetch wallet installed at /basics/wallet/getting_started and that the native FETs you want to convert are in this wallet. 2. Ensure you have the Metamask wallet installed at https://metamask.io and that your Ethereum account is set up on it. This is where the ERC-20 FETs will go to. 3. Go to the Token Bridge at https://token-bridge.fetch.ai. 4. Unlock the Metamask wallet if instructed to do so. 5. Ensure the **Native to ERC-20** tab is selected. 6. Hit **Connect Browser Wallet** and allow the token bridge to connect to your Fetch wallet. 7. The fields will be automatically populated with the addresses on the two wallets. Ensure these are correct. 8. Under **Amount**, enter the amount of tokens you wish to convert. 9. Hit **Transfer**."
how_to_convert_fet,"ERC-20 to Native FET. 1. Ensure you have the Metamask wallet installed at https://metamask.io and that the ERC-20 FETs you want to convert are in this wallet. 2. Ensure you have the Fetch wallet installed at /basics/wallet/getting_started and that your Fetch.ai account is set up on it. This is where the native FETs will go to. 3. Go to the Token Bridge at https://token-bridge.fetch.ai. 4. Unlock the Metamask wallet if instructed to do so. 5. Ensure the **ERC-20 to Native** tab is selected. 6. The **Ethereum address** should be automatically filled in with the address of the active account on your Metamask wallet. Ensure that it is correct. 7. Insert your Fetch wallet address at /fetch-wallet/deposit/#to-copy-your-accounts-address in the **Native Address** section. 8. Under **Amount**, enter the amount of tokens you wish to convert. 9. Hit **Transfer** and allow the Token Bridge to connect with your wallet."
reconciliation,"reconciliation. During the stake migration from ETH to the Fetch Main-net on September 14th, 2021, the staked funds were all migrated from the Ethereum staking contract to the Fetch.ai Main-net. However, some users decided to wait for reconciliation to access their funds after the auto-migration was complete. The reconciliation service at https://browse-fetchhub.fetch.ai/reconciliation has been built to restore access of the migrated funds for these users. !!! warning The reconciliation service is specifically for those users who opted to not use the guides to gain access to their staked funds during the stake migration. If you are unable to access your funds for any other reason, for example you were hacked, then the reconciliation service is not applicable to you."
reconciliation,"Instructions. First, make sure the following conditions are satisfied: * Your Fetch wallet at /fetch-wallet/ is set up and you have access to it. !!! info The address of the account on your Fetch wallet must have recorded at least one transaction on the network. If you have never made a transaction using this address before, the reconciliation tool and the network have no way of knowing your wallet exists and will not allow you to complete the final submission. * You have at least 1 Native FET token in your wallet to pay the transaction fee associated with the reconciliation tool. You can buy FET from centralized or decentralized exchanges at https://fetch-ai.network/get-fet/. * You have the Metamask wallet at https://metamask.io set up and configured with the address you used in the original staking platform. If the above conditions are satisfied, head over to the reconciliation service at https://browse-fetchhub.fetch.ai/reconciliation and follow the instructions. !!! info The reconciliation service is activated at certain times so users can register with it. For economic safety, the fund transfers only happen during network upgrades. If the above conditions are satisfied, head over to the reconciliation service at https://browse-fetchhub.fetch.ai/reconciliation and follow the instructions. Once your registered transaction is successful and your reconciliation request is deemed valid, the funds will be automatically released to the main-net address on your Fetch wallet."
native_and_erc20_fet,"native_and_erc20_fet. The **Fetch.ai token (FET)** is a utility token and the key medium of exchange on the Fetch.ai network. FET can be used to pay for services in the Fetch ecosystem and network transaction fees. Users can also choose to stake FET to participate in securing the network via its Proof-of-Stake (PoS) consensus mechanism and earn rewards in return for contributing to validator nodes. The Fetch.ai team initially developed the FET utility token on an ERC-20 contract at https://etherscan.io/token/0xaea46A60368A7bD060eec7DF8CBa43b7EF41Ad85 on the Ethereum network while finishing the work on the Fetch.ai native main network (main-net). This helped developers across the world get their hands on the FET tokens earlier and kickstart the process of developing innovative solutions within the Fetch.ai ecosystem. FET, as an ERC-20 token on the Ethereum contract has never been Fetch.ai's end game because the Ethereum chain does not offer the degree of scalability needed by the kinds of applications the fetch.ai ecosystem aims for. With the launch of the Fetch.ai Main-net, the native FET became available. This meant that users operating on the Fetch.ai network no longer needed to hold any token (e.g. ETH or BTC) associated with any other network. It is only the native FET tokens that fuel the Fetch.ai ecosystem and its applications. ERC-20 FET tokens are still in circulation and currently co-exist with native FET tokens and can be transferred from one to the other at ../how_to_convert_fet easily on the Fetch.ai network. All of the ERC-20 FET tokens will ultimately become native FET tokens, but in the foreseeable future both will live side by side. FET tokens can be purchased from different centralized or decentralized exchanges at https://fetch-ai.network/get-fet/. However, certain exchanges may buy or sell one type or the other."
glossary,"glossary. * **ACN (Agent Communication Network)**: it is a peer-to-peer communication network for autonomous economic agents. * **Address**: an address is a string of alphanumeric characters (that may also be seen as a QR code that can be read by a smartphone) and it is used on a blockchain network to transmit and receive transactions. The address in Ethereum starts with 0x (e.g. ) and is also called public key. * **AEA (Autonomous Economic Agent)**: it is an intelligent agent acting on an owner's behalf, with limited or no interference, and whose goal is to generate economic value to its owner. AEAs are a special type of agent. * **AEA Registry**: it is a repository of packages for the Autonomous Economic Agent (AEA) framework. Five types of packages are currently supported: entire agents and four agent components, including skills, connections, protocols and contracts. * **Airdrop**: it is a mean of distributing tokens to wallet addresses using digital money or tokens. Airdrops are occasionally used for marketing in return for easy actions like sharing, referring, or downloading an app. * **Altcoin**: any cryptocurrency alternative to Bitcoin. Many alternative cryptocurrencies are modified forks of Bitcoin (e.g. Litecoin). * **AML (Anti-Money Laundering)**: this refers to a group of international rules implemented to reduce the likelihood that criminal organizations or individuals would use money laundering. In different countries, these guidelines and legislation are applied to cryptocurrencies with diverse results. * **Arbitrage**: arbitrage is the simultaneous purchase and sale of the same asset in different markets in order to profit from tiny differences in the asset's listed price. * **API (Application Programming Interface)**: it is a software bridge that enables communication between two independent programmes. APIs specify how different components will communicate with one another. * **Automated Market Maker**: an automated market maker (AMM) is a system that automatically facilitates buy and sell orders on a decentralized exchange. In contrast to regular market makers, AMMs function by using self-executing computer programs, also known as smart contracts. These smart contracts automatically clear transactions between buyers and sellers. * **BEP-20**: according to Binance Academy, ""BEP-20 is a token standard on Binance Smart Chain that extends ERC-20, the most common Ethereum token standard. You can think of it as a blueprint for tokens that defines how they can be spent, who can spend them, and other rules for their usage. Due to its similarity to Binance Chain’s BEP-2 and Ethereum’s ERC-20, it’s compatible with both.BEP-20 was conceived as a technical specification for Binance Smart Chain, with the goal of providing a flexible format for developers to launch a range of different tokens. These could represent anything from shares in a business to dollars stored in a bank vault"". * **Bid and Ask Prices**: the term bid and ask refers to a two-way price quotation that indicates the best potential price at which a security can be sold and bought at a given point in time. The bid price represents the maximum price that a buyer is willing to pay for a share of stock or other security. The ask price represents the minimum price that a seller is willing to take for that same security. A trade or transaction occurs when a buyer in the market is willing to pay the best offer available, or is willing to sell at the highest bid. The difference between bid and ask prices, or the spread, is a key indicator of the liquidity of the asset. In general, the smaller the spread, the better the liquidity. * **Block**: it is an essential part of every blockchain. Imagine a blockchain as a continuously updated ledger that is synchronized between any number of distinct nodes (in fact, the term ""distributed ledger technology"" is also used to describe it). A block of transactions is cryptographically locked together and formally recorded when a predetermined number of transactions have been added to the ledger and consensus has been obtained among the nodes that the transactions are authentic. This ""block"" serves as the foundation for the following one. As a result, they are all connected in a chain, thus the name blockchain. * **Block Depth**: A block's position index in the blockchain relative to the latest (most recently added) block. For instance, a block that is five blocks before the latest block will have a block depth of 5. * **Block Explorer**: it is a software with a graphical user interface (GUI), that allows users to read and analyze the data contained on a blockchain. * **Block Height**: a block's position index in the blockchain relative to the genesis (zeroeth) block. It represents the number of blocks on a blockchain that are interconnected. For instance, the initial block (i.e. Genesis Block), would have height 0 whereas the 5th block added to a chain would have a block height of 5. * **Block Reward**: the payment made to a miner for successfully hashing a block of transactions. Cryptocurrencies and transaction fees are two possible types of block rewards. Whether or not all of the coins have previously been successfully mined depends on the policy followed by the relevant cryptocurrency. * **Block Period**: the length of time it takes for a block of transactions to be confirmed by the network, either by miners under PoW or by validators under PoS, is referred to as ""block time."" Also see ""Proof of Work"" and ""Proof of Stake"". * **Blockchain**: the blockchain is a digital ledger of all the transactions ever made in a particular cryptocurrency. It’s composed of individual blocks that are chained to each other through a cryptographic signature. Each time a block’s capacity is reached, a new block is added to the chain. The blockchain is repeatedly copied and saved onto thousands of computers all around the world, and it must always match each copy. As there is no master copy stored in one location, it’s considered decentralized. * **Bug**: mistakes in software or other aspects of a program. These mistakes may produce an error in the form of unexpected results or erratic behavior. In the best case, a bug may only affect software performance. In the worst case, it may make the software crash. * **Bug Bounty**: a reward given for disclosing bugs and vulnerabilities in computer programming. * **Circulating Supply**: this term refers to the number of cryptocurrency coins or tokens that are publicly available and circulating in a specific market. The circulating supply of a cryptocurrency can increase or decrease over time. * **Cold Wallet**: a physical storage device used to store cryptocurrencies offline (e.g. a flash drive, hard disk). * **Collateral**: a collateral is something of value given as a guarantee to obtain something else. For instance, a borrower may offer their car as a collateral to a lender when taking out a loan. The vehicle acts as a safeguard or warranty in case the borrower fails to pay their debts. Usually, collateralized loans present much lower interest rates when compared to non-collateralized ones. Collateral can come in different forms. Some of the most common types include mortgage collaterals, invoice financing and margin trading collaterals. * **Collateralization Ratio**: to borrow tokens from a DeFi protocol, one must put up more collateral than the loan is worth. Each protocol can use different collateralization ratios. However, users must maintain the designated ratio to prevent liquidation (i.e. liquidation ratio). * **Command Line Interface (CLI)**: it is a text-based user interface. CLIs can provide more core functionality and access to system resources than a graphical user interface (GUI), but at the cost of usability. Because of this, CLIs are generally directed toward developers over the average user. They can be used to demonstrate the functionality underlying a program without expending development time building a more robust user interface. * **Confirmation**: when the blockchain transaction has been validated by the network, a confirmation occurs. This occurs through a process called mining under a Proof of Work (PoW) consensus mechanism and as validation under a Proof of Stake (PoS) consensus mechanism. Theoretically, a transaction that has been successfully confirmed cannot be changed or double spent. The difficulty of a double spend assault increases with the number of confirmations a transaction has. * **Consensus**: the process through which a number of peers, also known as nodes, on a blockchain network come to an agreement over the legitimacy of transactions presented to the network. Proof of Work (PoW) and Proof of Stake (PoS) are the two main consensus procedures. * **Cryptocurrency**: it is a digital currency which has a mathematical foundation that controls the generation of units of currency and using encryption methods to confirm the transfer of payments. Distributed ledger technology is used to keep track of cryptocurrency transactions, which are carried out without the assistance of a central bank. * **Cryptography**: it is the process of encoding data into unintelligible codes to make it secure and hidden. Only the required key may be used to decode and read the data. * **Crypto Wallet**: these wallets store public and private keys allowing users to send, receive, and store tokens. The tokens reside on the blockchain and the wallet accesses them. * **DAO**: a Decentralized Autonomous Organization (DAO) is a collection of individuals that get together without having any decisions made for them by a centralised authority figure or corporation. These are constructed using smart contracts on a blockchain. Members of DAOs frequently pay their way in by buying a governance token designed just for the DAO, which gives them the right to vote on decisions affecting how the money fund is used and handled. People from all around the world may be a part of these organisations, and they frequently interact on Discord channels. * **Decentralization**: it is the term used to describe the transition of power and control to a decentralized system from a centralized structure, government, or party. * **Decentralized Application (DApp)**: a computer program that utilizes a blockchain for data storage, runs autonomously, is not controlled or operated from a single entity, is open source and has its use incentivized by the reward of fees or tokens. * **Decentralized Exchange (DEX)**: this is a platform which uses smart contracts to exchange cryptocurrencies. Peer-to-peer trading takes place between liquidity pools. This contrasts with centralised exchanges, which are more comparable to cryptocurrency-focused banks or financial firms. The two have significant, ever-changing technological and regulatory variances from one another. * **Decentralized Finance (DeFi)**: DeFi stands for decentralized finance. Traditional finance has always relied on a reputable middleman, and because of this, it has always been centralized. For instance, if you need to send money to a friend or family, you depend on your bank to transfer the funds to their account. DeFi, on the other hand, does not need any middlemen. Direct asset transfers are possible between participants. Theoretically, this speeds up and reduces the cost of transactions. * **Deflationary Token**: tokens are deflationary if a percentage is permanently removed from the marketplace over time. Buybacks and burns are a popular way of destroying tokens. This causes scarcity which hopefully makes the price rise. * **Digital Asset**: a scarce, electronically transferred, intangible digital asset having a market price. * **Digital Identity**: a networked or online identity that a person, business, or technological item adopts. * **Digital Signature**: a public key encryption-generated code that is added to an electronic document transmission to validate the document's contents. * **Distributed Denial of Service (DDoS) Attack**: a cyberattack strategy where the attacker repeatedly floods the system with requests in an effort to block the fulfillment of valid requests. * **DLT (Distributed Ledger Technology)**: it is a database of data that is duplicated and shared among a network of computers spread out across many locations. It is a flexible way of information recording as opposed to a centralised ledger. Instead of being updated by a centralised authority, the ledger's or record's data is changed by network participants. The information kept on the ledger can be checked and audited, and it can be accessible to some or all users. Value-containing peer-to-peer transfers may be documented on a DLT. The transferred value could be cash, securities, or even private data. * **Double Spend Attack**: it is a malicious attempt to convince two separate parties that one of two conflicting transactions is valid. In such a situation, both transactions appear individually valid, but their combination is not. Thus, only one is included in the blockchain. Due to the nature of blockchain reorganizations, simply showing that a transaction is included in a block is not enough to verify that it is immutable. Transactions are only immutable once they have reached a depth in the chain where a chain reorganization is unlikely to affect them. Double spend attacks can be mitigated by waiting to ensure that a transaction is confirmed by the network and is acceptably immutable before acting on it. * **ERC-20**: it is the standard to which each Ethereum token complies. This standard defines the way each token behaves so that transactions are predictable. Other cryptocurrencies also use the ERC-20 standard, piggybacking on the Ethereum network in the process. * **ERC-721**: this is an additional standard for Ethereum smart contracts that permits the creation of non-fungible tokens, or NFTs. This token standard is used to symbolize a distinct digital asset that cannot be exchanged. * **Exchange**: service for trading cryptocurrency tokens for other tokens or fiat. Exchanges are highly regulated in the European Union, eastern Asia, and the United States of America; thus, many exchanges are located in countries with less oversight. * **Fiat**: according to Investopedia's definition, ""fiat money is a government-issued currency that is not backed by a physical commodity, such as gold or silver, but rather by the government that issued it. It usually requires fiat exchanged at a CEX or through local means such as Bitcoin ATMs to be able to purchase cryptocurrency with fiat currency"". * **Fork**: a fork establishes a different version of a blockchain and is frequently purposefully carried out to update a network. _Hard forks_ result in a new version of the chain that must be embraced in order to continue participating, whereas _soft forks_ result in two chains that are somewhat compatible. A disputed hard fork may result in the creation of two distinct blockchain networks. * **Fork (Hard)**: type of fork that is permanently incompatible with the original network. Hard forks typically change transaction data structures, consensus algorithms, or add/remove blocks that would not have otherwise been included. For example, Bitcoin Cash is a hard fork of Bitcoin, and Ethereum Classic is a hard fork of Ethereum. * **Fork (Soft)**: type of fork that is compatible with the data on the original chain. Blocks created on the original chain after a soft fork would be valid on the forked chain; however the reverse does not have to be true. For instance, when Ethereum upgraded to the Byzantium version, it was affected through a soft fork. * **Gas fees**: gas fees (i.e. transaction fees) are rewards paid to miners to incentivize them to support the network's transactions which become written to the blockchain. On the Ethereum network this gas fee unit amount is expressed in gwei. Operations to or from CEXs, DEXs Liquidity Pools and wallets require gas fees. The cost users incur due to gas fees will vary depending on the current supply and demand: when demand on Ethereum or an ERC-20 network is at its highest, these gas fees are at their highest. * **Gas Limit**: you can only spend a certain amount of gas each transaction on the Ethereum network, according to the gas limit. It may also be seen as a ""rough estimate"" of the amount of computer power your transaction will require. * **Gas Price**: the gas price is the amount paid to the network for the computational labour completed during a particular transaction. It is paid in ETH units known as Gwei. The price of gas may fluctuate dramatically depending on network congestion. * **Governance Tokens**: governance tokens are cryptocurrencies that represent voting power on a blockchain project. Governance tokens are used to vote on system parameters such as choice of autonomous market makers to back with liquidity from the liquidity pool, borrowing rates from the liquidity pool, usage of exchange fees, etc. Governance tokens are minted at an exponentially decreasing rate to incentivise early liquidity providers in the system. Minted tokens are distributed in proportion to the amount of liquidity supplied to the system at each block. Some fraction of the exchange fees and autonomous market maker spreads is used to buy back these tokens and burn them in order to reduce the quantity of tokens circulating and thus increasing their value. * **Graphical User Interface (GUI)**: it is way of displaying information to the user through stylized, on-screen elements, such as windows and taskbars. * **Hash**: a programmatic function that accepts an input and produces the ""hash value"" or ""digital fingerprint,"" which is an alphanumeric string. Each block in the blockchain has its own hash value as well as the hash value used to validate the transaction that came before it. Transactions on the blockchain are verified via hashes. * **Hard Fork**: in accordance to Binance Academy, ""Hard forks are backward-incompatible software updates. Typically, these occur when nodes add new rules in a way that conflicts with the rules of old nodes. New nodes can only communicate with others that operate the new version. As a result, the blockchain splits, creating two separate networks: one with the old rules, and one with the new rules"". * **Hot Wallet**: a wallet that is continuously linked to the internet, such as one that is kept on a major exchange. Compared to hardware wallets or cold storage solutions, hot wallets are thought to offer less security. * **IBC Transfers**: the Inter-Blockchain Communication protocol (IBC) is an inter-module communication protocol that bridges different blockchains to facilitate communication and feature exchanges between networks with different infrastructure designs and consensus algorithms. * **Initial Coin Offering (ICO)**: it is like an initial public offering (IPO) of stock, an initial coin offering is a way for a tokenized business to generate investment from the public. ICOs are regulated by the Securities and Exchange Commission (SEC), even if the tokens are not specifically securities because the language used in promoting a sale can serve to classify tokens as a security offering. * **KYC (Know-Your-Customer)**: KYC guidelines fit into the broader scope of _Anti-Money Laundering (AML)_ policies in traditional finance. There is no KYC or AML in DeFi. * **Ledger**: a book or collection of accounts in which account transactions are recorded. * **Liquidation**: liquidation is applied to borrowers. They can have their collateral liquidated if they do not maintain the set collateralization ratio. * **Liquidation Ratio**: this is the level at which the collateralization ratio dips that can trigger liquidation. * **Liquidity Pool**: a liquidity pool is a crowd sourced pool of cryptocurrencies or tokens locked in a smart contract that is used to facilitate trades between the assets on a decentralized exchange (DEX). Many decentralised finance (DeFi) platforms use automated market makers (AMMs), which enable digital assets to be traded in an automatic and permissionless manner through the use of liquidity pools, in place of traditional markets of buyers and sellers. * **Liquidity Provider**: a liquidity provider (LP) is a user who funds a liquidity pool with own crypto assets so as to facilitate trading on the platform and earn passive income on the liquidity deposited. * **Mainnet**: it represents the main network on which transactions on a certain distributed ledger actually occur. The Ethereum mainnet, for instance, serves as the public blockchain for network verification and transaction processing. * **MAS (Multi-Agent System)**: a Multi-Agent System is a group of agents that interact with each other and the environment to achieve specific goals. In such systems, agents may not have full knowledge of both the environment and the internal state of other agents. Interactions between agents may be cooperative or competitive. In a cooperative interaction, agents work with each other towards a common goal. The aim of this interaction is to enable agents to distribute and share their knowledge and use the intelligence and capabilities of each other to solve problems. In a competitive interaction, agents may compete to obtain individual resources and achieve individual goals. * **Metamask**: Metamask is a popular Web 3.0 wallet used in DeFi. Other wallets you may hear about are the Binance Wallet and Torus. * **Miner**: a miner is an actor in a blockchain network that has the ability to create and submit new blocks to the chain. Which miner is allowed to produce a specific block may be predetermined, or miners may simultaneously compete to add the next block to the chain. * **Mining**: mining is the process through which cryptocurrency transactions are gathered, verified and recorded into a digital ledger known as blockchain. The work done by miners is essential for maintaining the integrity of the network and is also responsible for introducing new coins into the system. It is the method used by a Proof of Work (PoW) consensus mechanism to verify blocks or transactions before adding them to a blockchain. A miner must use a computer to solve a cryptographic puzzle in order to validate a block. The block is regarded as having been ""mined"" or validated after the computer has figured out the issue. The first computer to mine or verify the block receives a reward represented by cryptocurrencies (e.g. BTC, ETH). * **Multi-Signature**: multisig stands for multi-signature, which is a specific type of digital signature that makes it possible for two or more users to sign documents as a group. Therefore, a multi-signature is produced through the combination of multiple unique signatures. Basically speaking, the funds stored on a multi-signature address can only be accessed by using 2 or more signatures. Therefore, the use of a multisig wallet enables users to create an additional layer of security to their funds. * **Network**: it represents a set of actors that are collectively interconnected for a common purpose. * **Node**: a node is any computer that is a part of the blockchain network. A _full node_ is a computer able to completely verify transactions and download all of the data associated with a particular blockchain. A _lightweight_ or _light_ node, in contrast, utilizes a separate validation mechanism and does not download the entire blockchain's data. * **Nonce**: this term has a variety of connotations, and depending on the situation, it is employed in many different ways. On the Ethereum mainnet, it refers to a distinct transaction identification number that rises in value with each subsequent transaction to assure different safety measures. It was originally created from a contraction of a term meaning ""not more than once"" (e.g. preventing a double-spend). * **NFT**: Non-Fungible Tokens are cryptographic assets built on a blockchain with unique identification codes and metadata that distinguish them from each other. These were born as ERC-721 crypto assets representing a unique or rare digital or real world item. They let us tokenize things like art, collectibles, even real estate through a securitisation process that takes place on the blockchain. Unlike cryptocurrencies which are identical to each other and can be used as a medium for commercial transactions, NFTs represent unique and irreplaceable tokens, thereby making it impossible for one non-fungible token to be equal to another (i.e. NFTs are not fungible). This ensures a highly transparent and flexible record of ownership. An NFT can only have one owner at a time. Ownership is managed through the unique ID and metadata that no other token can replicate. NFTs are minted through smart contracts which assign ownership and manage the transferability of the NFT itself. When someone mints an NFT, they execute a code stored in the smart contracts that conform to different standards (i.e. ERC-721). This information is added to the blockchain where the NFT will be managed. * **Open Source Software**: it is a software for which the source code that is available to the public. One of the benefits of open source software is that people from outside the core development team can support it, collaboratively creating new features or fixing bugs. Open source licenses typically include language that prevents anyone from reselling the core code without significant changes. * **Oracle**: within the blockchain context, an oracle is a data source used as a bridge between smart contracts and other external sources. More specifically, an oracle is an agent that not only communicates with external data sources but also verifies and authenticates that the data being provided is accurate. Thus, oracles are responsible for providing vital and reliable information to smart contracts, which in turn perform certain tasks. * **P2P (Peer-to-Peer)**: P2P describes interactions that take place between two parties, often two different people. Any number of users can be a part of a P2P network. People may conduct transactions or connect with one another over a blockchain network without depending on a middleman or a single point of failure. * **Private blockchain**: a blockchain or distributed ledger with a closed network whose users are all under the supervision of the same organization. For new members on a private blockchain, there must be a verification procedure. Additionally, a private blockchain may place restrictions on who may take part in the network's consensus. * **Private Key**: this is effectively the encrypted password to someone's cryptocurrency assets, and it is also known as a secret key. It is an impossible-to-guess number that is really lengthy. By signing a transaction with your private key, you approve it. You can access and control your crypto assets using private keys. * **Proof of Stake (PoS)**: this is a consensus mechanism in which transactions or blocks are verified by a single validator. Those that validate transactions, stake their cryptocurrencies (e.g. ETH), on those particular transactions. If someone accurately verifies a block (or collection of transactions), they are rewarded. A validator often forfeits the cryptocurrency they staked if they verify an invalid transaction. Comparatively speaking to Proof of Work consensus, PoS takes a tiny amount of computational power. * **Proof of Work (PoW)**: this is a consensus mechanism in which a network's nodes or individuals collectively mine each block. Each miner in a PoW network must compete to solve a computational puzzle in order to hash a block. The complexity of successfully hashing each block is increased by the inclusion of solving for a target. The whole hashing procedure will have required some time and computing effort for each block that was hashed. The miner who successfully hashes the block first earns a reward in the form of cryptocurrency. As a result, a hashed block is regarded as Proof of Work. PoW requires a disproportionately higher amount of energy than other consensus processes. * **Public Blockchain**: a network that is completely open to the public, allowing anybody to take part in transactions, run the consensus protocol to help decide which blocks should be added to the chain, and keep track of the shared ledger. * **Public Key**: the wallet address that is visible to the whole public. You must provide your public key in order to receive funds into your account. It is paired with a private key. * **Python**: it is a high-level, all-purpose programming language. * **Scalability**: a change in scale or size to meet the demands of a network This term is used to describe a blockchain project's capacity in its intended use as well as its capability to manage network traffic and future expansion. * **SDK**: a Software Development Kit (SDK) is a set of tools provided by the manufacturer of (usually) a hardware platform, operating system (OS), or programming language. SDKs help software developers create applications for that specific platform, system, or programming language. * **Slippage**: in accordance to Investopedia's definition, ""slippage refers to the difference between the expected price of a trade and the price at which the trade is executed. Slippage can occur at any time but is most prevalent during periods of higher volatility when market orders are used. It can also occur when a large order is executed but there isn't enough volume at the chosen price to maintain the current bid/ask spread. Slippage occurs in all market venues, including equities, bonds, currencies and futures"". * **Smart Contracts**: these are programs having their terms encoded in computer code. These are not legal documents, even if they sometimes include agreements or agreements between parties that resemble a regular legal contract. On the Ethereum Virtual Machine, smart contracts are the most common type of programming. Smart contracts contains a series of automated operations that may be programmed and executed if a series of criteria are satisfied. * **Soft Fork**: a soft fork is an update that is backward-compatible, allowing upgraded nodes to continue connect with not upgraded ones. A soft fork often involves the insertion of a new rule that does not conflict with the existing ones. * **Snapshot**: in the context of cryptocurrencies, the process of capturing the state of a blockchain at a specific block height is frequently referred to as taking a snapshot. In this instance, the snapshot captures the entirety of the blockchain ledger, including all of the current addresses and the information linked with them (i.e. transactions, fees, balance, metadata, and so on). Prior to each round of an airdrop event, snapshots are frequently employed. Tokens are given during an airdrop based on the balance of each blockchain address. In this instance, snapshots are made to capture each token holder's balance at a certain moment in time (i.e. block height). Snapshots are also important during blockchain hard forks, as they mark the block height in which the main chain will be recorded before giving birth to the new chain. * **Software Agent**: a software agent is a computer program that acts on behalf of an entity (e.g. individual, organisation, business). * **sOEF (Simple Open Economic Framework)**: the simple-OEF, or sOEF, is a search and discovery service for autonomous economic agents. For additional information: here at https://docs.google.com/document/d/1CFSLKM01cbctdBBPd3izAd_zNabRczaMv2dq1N5bXCg/edit#heading=h.jm6oakj7ls91. * **Spread**: when an order is made on an exchange or market, the disagreement of the difference in price between potential buy and sell offers of an asset is called the spread. A wide spread in price can lead to higher slippage. * **Stablecoin**: a stablecoin is a type of cryptocurrency that is designed to maintain a stable market price. Recently, this type of digital currency has grown in popularity, and we now have numerous stablecoin projects. Although the exact mechanisms vary from one coin to another, stablecoins are supposed to be somewhat resistant to market volatility, so they should not experience significant price changes. * **Timing Risk**: according to Investopedia's definition, ""timing risk is the speculation that an investor enters into when trying to buy or sell an asset based on future price predictions. Timing risk explains the potential for missing out on beneficial movements in price due to an error in timing"". * **Testnet**: a testing network for a new coin, project, product or for potential improvements to an existing product or offering. Testnets (e.g. Kovan Test Network) are used to test the viability and vulnerability of new ideas, concepts, code, and processes prior to moving on to a production network. * **Token**: a unique form of cryptocurrency. It is a method to specifically refer to a cryptocurrency that utilizes a certain blockchain. There are many types (see also ERC-20 and ERC-721). * **Tokenization**: it represents the concept of translating business strategies, goods, or services into discrete, tradeable units that are recorded on a blockchain or other system. Physical goods can be tokenized by associating their unique identifiers with on-chain references. * **Trustless**: in the context of decentralized technology, everyone has a copy of the ledger of every transaction, so there is no need for a third-party repository of truth where confidence is anchored. This means that everyone can independently verify the transactions. Because the system functions uniformly for everyone, the rules and protections incorporated into the blockchain in some ways serve as the foundation for increased trust amongst members. * **Validator**: it is a computer node in charge of validating blocks on a blockchain. It is a person who owns the ability to verify transactions and earn cryptocurrency on a proof-of-stake blockchain as part a reward for validating such blocks. * **Volatility**: volatility describes how quickly and how much the price of an asset changes. It is usually calculated in terms of standard deviations in the annual return of an asset over a set period of time. Because it is a measure of the rapidity and degree of price changes, volatility is often used as an effective measure of the investment risk associated with an asset. * **Yield Farming**: yield farming is the practice of staking or lending crypto assets in order to generate high returns or rewards in the form of additional cryptocurrency. Yield farming protocols incentivize liquidity providers to stake or lock up their crypto assets in a smart contract-based liquidity pool. These incentives can be a percentage of transaction fees or a governance token. These returns are expressed as an annual percentage yield (APY). As more investors add funds to the related liquidity pool, the value of the issued returns rise in value. * **Volume**: a market's volume, also known as trading volume, is the total number of units exchanged during a specific period of time. It is a calculation of the quantity of separate assets that were traded throughout the course of a specific time period. A buyer and a seller are involved in every transaction. The facilitating exchange records the transaction whenever they come to an agreement at a particular price. The trade volume is then calculated using this data. Any trade asset, such as stocks, bonds, fiat money, or cryptocurrencies, may be used to measure trading volume. * **Wallet**: a safe digital place or storage device for cryptographic assets. Wallets can be offline or online (e.g. hot and cold wallets). * **Web3**: it is a notion for a new version of the World Wide Web (WWW) that integrates ideas like decentralization, blockchain technology, and token-based economics is known as Web3 or Web 3.0. It has been likened to Web 2.0 by some engineers and journalists, who claim that data and information are consolidated in a limited number of businesses frequently referred to as ""Big Tech"". Gavin Wood, a co-founder of Ethereum, first used the phrase Web3 in 2014, and in 2021 venture capital firms, major technological companies, and cryptocurrency enthusiasts began to show interest in the concept. * **51% Attack**: a 51% attack is occurring if one person or one group of individuals control more than half of the network's computing power or mining hash rate. By taking over mining activities, blocking or altering transactions, and double-spending coins, this organisation effectively has complete control over the network and the ability to disrupt a cryptocurrency."
Agent-Based and Multi-Agents Systems,"Agent-Based and Multi-Agents Systems. # Agent-Based and Multi-Agents Systems An **agent** is a piece of software that _represents_ an entity (individual, organisation, or object) and acts _continuously_ and _autonomously_ (with limited or no interference) on their behalf. The most important defining characteristic of an agent is its autonomy, that is the ability to act on its own without external direction from its owner in response to situations it encounters. ???+ note What differentiates agents with other software paradigms (e.g. smart contracts, web apps) is that as well as being _reactive_, meaning they respond to other agents and changes in their environments, they are also _proactive_, which means that they take the initiative and perform actions to achieve their goals."
Agent-Based and Multi-Agents Systems,"Key features of agents. 1. **Representation**: Agents are owned by and operate on behalf of an entity, for example an individual, family, company, government, or object, and look after their owner's interests. 2. **Autonomy**: Agents operate with limited or no interference and do not need to be constantly told what to do. They perform actions continuously according to their internal reasoning system. 3. **Self-Interested**: Each agent primarily looks after its own interests (which is aligned with those of its owner) and not necessarily the interests of other agents. 4. **Proactive**: Agents have goals to achieve allowing them to take the initiative and perform actions that get them closer to achieving their goals. This means an agent typically compares the outcome of different actions relative to its goals and selects the one that takes it closer to them. 5. **Reactive**: Agents respond to other agents, services, etc., and changes in their environments. A great example of this behaviour is a heating system with a thermostat that constantly monitors its environment and turns the heating on or off when the temperature changes. ???+ note Agent characteristics and behaviors may vary in their extent and sophistication. An agent may differ from other agents, in the amount of information in its decisions process, its internal models of the external world, its view of the possible reactions of other agents in response to its actions, and the size of the memory of past events the agent retains and uses in making its decisions. Further instances of differentiating factors are the amounts of resources used by agents or accumulated as a result of their interactions."
Agent-Based and Multi-Agents Systems,Agent-Based Modelling. 
Agent-Based and Multi-Agents Systems,"Multi-Agents Systems. ,Benefits: 1. **Decentralization**: multi-agents systems are decentralized. The authority to make management decisions about the system is distributed among the participants. A multi-agents system is run for its participants by its participants. 2. **Heterogeneity**: agents in multi-agent systems are owned and operated by different entities and so are typically not uniformly designed. For instance, the agents may be composed of different hardware or software components. 3. **Scalability**: multi-agents systems are easy to scale. You simply add agents to the system to grow the system. 4. **Robustness**: multi-agents systems are intrinsically very robust as no single failure point takes down the system. 5. **Adaptability**: multi-agents systems adapt to changing circumstances effectively as each agent autonomously adjusts to changing circumstances. ,Drawbacks: 1. **Complexity**: multi-agents systems are quite complex to set up, maintain and troubleshoot. You have to use a pre-existing framework or build one, and getting all the agents to communicate effectively together can be a challenge. As these are decentralized systems (i.e. no central authority), managing the system is more complicated than a centralized one, as participants need to be involved in management decisions. The complexity of MASs can increase rapidly with the number of agents, the interactions among them, and the complexity of their behavior. 2. **Unpredictability**: with every agent acting in their own interest, it might be easy to predict what an individual agent is trying to achieve. However, it is much more difficult to predict the direction the whole system moves towards, as this is the result of the many interactions between every individual agent in the system. Multi-agent systems have received tremendous attention from scholars in different disciplines, ranging from computer science to civil engineering, in order to solve complex problems by subdividing them into smaller tasks. The individual tasks are allocated to autonomous agents, and each one of them decides on a proper action to solve the task using multiple inputs."
peer_to_peer_systems,peer_to_peer_systems. 
peer_to_peer_systems,"What is a Peer-to-Peer System?. A **Peer-to-Peer** (i.e. **P2P**) system is a network of users who communicate with each other without having to go through a middleman. Peer-to-Peer networks consist of a group of devices that collectively store and share files. Every participant (i.e. _node_) functions as a distinct _peer_. Normally, all nodes are equally powerful and carry out the same functions. We can outline three key characteristics featuring a P2P system: * **No middlemen needed**: One of the key characteristics of peer-to-peer systems is that middlemen are not always required, though they are allowed. !!! example When booking a hotel room with a travel agent, you are going through a middleman. However, booking a room directly with the hotel itself is direct communication, and an example of peer-to-peer interaction. * **Direct links**: direct communication between both parties can be established only in the presence of direct links between them. * **Direct interaction**: It is not enough just for parties to be able to communicate directly, they have to be able to actually interact. Peer-to-peer systems are characterized by direct interaction. !!! example In the hotel room booking example, making a booking with the hotel sending back a booking confirmation actually consists of a direct interaction between the two parties. ??? note P2P networks enable the sharing of files stored on linked devices' hard drives. A user can serve as the source of a file after they have downloaded it. In other words, when a node performs the role of a client, it downloads data from other network nodes. However, while they are acting as a server, they serve as the location for file downloads by other nodes. However, both operations can be carried out concurrently. Therefore, each node has a copy of the data and serves as both a client and a server to other nodes. This removes the need of a central administrator or server. P2P networks differ from more conventional client-server systems in this way, where client devices receive files from a centralized server. Since every node sends, receives, and saves data, P2P networks often get quicker and more effective as their user bases expand. P2P networks are also particularly resilient to cyberattacks thanks to their distributed architecture, and P2P networks do not have a single point of failure, in contrast to conventional models. P2P systems can be grouped based on their architecture into the following _three primary subtypes_: #### Unstructured P2P Networks P2P networks that are unstructured lack a defined node organization. Participants communicate with one another in a random fashion. These systems are thought to be resistant to high churn activity (i.e. several nodes frequently joining and leaving the network). ??? note Unstructured P2P networks are simpler to set up, but because search requests are sent to as many peers as possible, they may utilize more CPU and memory. This frequently causes the network to get overrun with requests, especially when only a few nodes are providing the needed material. #### Structured P2P Networks The structured P2P network is organized into an arrangement based on a distributed hash table (i.e. DHT). !!! info DHT is an advanced form of lookup or search system that allows nodes to access data, such as files, through the use of a key instead of having to make a copy of the data on every node. This contrasts with the idea behind unstructured P2P networks in which whole files may be stored on more than one node. ??? note Searching for material in a structured network is simpler and uses less power and memory than an unstructured network. The routing of requests and information rely on each peer knowing what is available for download and other criteria of the neighboring node, which must be relearned as peers leave or join the network as the neighbors change. #### Hybrid P2P Networks In hybrid P2P networks some elements of the P2P architecture are combined with the traditional client-server approach. Hybrid models typically display better overall performance when compared to the other two categories. They typically incorporate some key benefits of each strategy, attaining notable levels of efficiency and decentralization at the same time."
peer_to_peer_systems,"Benefits and Drawbacks of a P2P System. ,Benefits: * **No need for a Specific Operating System or Software**: Individual peers can be on any OS and in most cases do not need specialized software to share files. This is especially useful in remote P2P networks where users might not have the same hardware. * **Cost**: P2P networks do not need a costly server and can be joined together simply through USB or over the internet. Even more permanent connections (using copper wires in smaller offices, for example) is not as costly as creating a server or buying server software. * **Egalitarian**: Each peer has control over what can be accessed by others on the network by changing the sharing settings. This makes it easier to protect the integrity of the network as an issue with one node will not destroy the rest of the peers. * **Easy to set up**: Configuration is straightforward, with no need for the oversight of an administrator. Each node manages access and sharing themselves. * **Scalable**: P2P networks are easy to scale, with more nodes adding performance and giving more power. Adding more peers makes more storage and processing power available to the network and can improve download and upload speeds. * **Easy Searching**: The idea of a peer-to-peer network is that finding the right resources should, in theory, be easy. Even in an unstructured network, if the content you are searching for is not rare, it should be held by several peers and be available to download from multiple sources. * **Aligns With Decentralized Systems**: Peer-to-peer systems align closely with decentralized systems, as both require trust between parties in order to work effectively, and both do not require central authorities to manage the system. Peer-to-peer communication is the basis of how parties in decentralized systems communicate with each other. * **More Freedom**: By not having to go through a middleman, it gives users more freedom. They are not limited by the information for example provided by the hotel booking site but can find out far more by being in direct contact with the hotel and likewise the hotel can ask questions directly to their guests. ,Drawbacks: * **Decentralized**: this makes it harder to arrange backups and file archiving. The safety and integrity of the content can be at risk if it is not managed, backed up regularly and deleted once it is obsolete. Due to the decentralized nature of such networks, participants may find it hard to provide themselves those useful services normally provided by the middlemen, such as marketing and promoting services, or market balancing services. * **No Oversight**: in most of P2P networks, the decentralized nature makes it hard for a single administrator to monitor contents, and these can be at risk from malware and viruses. Sharing files with an infected node can transmit malware through the network and could cause problems over several affected peers. * **Slow transmission**: simultaneous uploading and downloading of files can lead to a slower rate of transmission. The double function of uploading content while downloading other resources might actually make it slower. * **Poor Internet Performance**: file sharing through P2P networks uses a lot of bandwidth and CPU, which can slow the computer performance for the individual user, especially when it comes to the internet. If multiple files are being shared, there is a risk that productivity in other areas could be reduced. * **Illegal Content**: peer-to-peer networks can be used for downloading pirated music, movies, software and other copyrighted material, even if the sharer is unaware."
peer_to_peer_systems,"Examples of Peer-to-Peer Systems. One of the most popular uses of P2P systems is represented by file sharing networks which allow members to directly share files with each other. !!! example Napster at https://www.napster.com/it{:target=""\_blank""} and LimeWire at https://limewire.com/{:target=""\_blank""} were P2P music sharing networks backed by the idea that peers connected through the internet could find and download any song they wanted, from several other users. There exist also online gaming platforms which adopt a P2P structure for downloading games between users, such as Blizzard Entertainment at https://www.blizzard.com/en-gb/{:target=""\_blank""} which distributed Diablo III, StarCraft II, and World of Warcraft using P2P. A more successful use for P2P systems was developed in the crypto world thanks to **blockchains** and how these relate to P2P networks. Bitcoin, Ether and many other cryptocurrencies were developed following the P2P mechanism. An additional example of P2P architecture is represented by **P2P crypto exchanges**, on which users can immediately buy or sell cryptos from/to other users directly. The majority of P2P exchanges let you send and receive cryptocurrencies without requesting identity verification, in contrast to centralized exchanges where you must complete KYC in order to fulfill an order. Also, unlike centralized exchanges, P2P-based exchanges do not have a single point of failure. In most cases, a user may sign up for the exchange without having to undergo identification verification. A password and an email address are all that are needed for registration. !!! example P2P-based crypto exchanges include Paxful at https://paxful.com/{:target=""\_blank""} and Binance P2P at https://p2p.binance.com/en/trade/all-payments/USDT?fiat=CNY{:target=""\_blank""}."
oracles,"oracles. Blockchains get their most significant positive features by being purposefully segregated from external systems. However, off-chain data cannot be accessed by blockchains or smart contracts directly, and these need such data to perform any contractual agreement between any party on the blockchain itself. This is known as the core of **the Oracle dilemma**. This issue comes from the following limitation: _blockchains are unable to draw data from or push data out to any external systems as part of their built-in functionality_. A blockchain's isolation is precisely what makes it so safe and dependable since the network just needs to come to consensus on a very simple set of questions using information that has already been written in the ledger (e.g. did the owner of the public key sign the transaction with their matching private key? Is the public address sufficiently funded to support the transaction?) A blockchain needs an additional piece of infrastructure, an **Oracle**, to connect the blockchain to the off-chain services in a secure manner. _A blockchain Oracle is a safe piece of middleware that makes it easier for blockchains to communicate with any off-chain system, such as data providers, online APIs, business backends, cloud providers, IoT devices, e-signatures, payment systems, other blockchains, and more_. This is, a blockchain Oracle is the element that links the blockchain to the external system, making it possible for smart contracts to operate on the basis of inputs and outputs from the real world. The Oracle system must work concurrently on and off the blockchain in order to perform these tasks. The **on-chain component** is used to connect to the blockchain to listen for requests, broadcast messages, submit proofs, extract blockchain data, and perhaps even carry out computation on the blockchain. The **off-chain component** is used to execute requests, retrieve and prepare external data, transport blockchain data to other systems, and carry out off-chain computation for improved smart contract scalability, privacy, security, and other features. Blockchain Oracles can help to increase the range of possibilities for smart contracts to work, thus, Oracles are essential components of the blockchain ecosystem. Smart contracts would not even be particularly useful without blockchain Oracles as they would only have access to data from their own networks since the vast majority of smart contract use cases, including DeFi, depend on knowledge of real world data and off-chain occurrences. Oracles provide a global gateway to off-chain resources, therefore expanding the sorts of digital agreements that blockchains may support while maintaining the crucial security features of blockchains. Oracles and smart contracts are beneficial for many major businesses, including asset pricing in banking, weather data in insurance, randomness in gaming, IoT sensors in supply chains, identity verification in government, and many more. Because the results of smart contracts are directly determined by the data that oracles supply to blockchains, it is crucial that the Oracle mechanism works accurately for the agreement to operate exactly as intended."
oracles,"Types of Blockchain Oracles. Blockchain Oracles may be categorized based on the following characteristics: * Data source: does the data come from hardware or software as its source? * Information direction: is the flow of data going inward or outward? * Trust: are these oracles decentralized or centralized? Given this, we can identify the following types of oracles: 1. **Software Oracles**: these communicate with internet data sources and provide the data to the blockchain. Any internet data source is a possible source for this information (e.g. online databases, servers, websites, ...). Exchange rates, pricing of digital assets, and real-time flight information are just a few of the types of data that software oracles frequently give. 2. **Hardware Oracle**: these Oracles are made to gather data from the real world and provide it to smart contracts. Electronic sensors, barcode scanners, and other information gathering tools may transmit this data. In essence, a hardware oracle converts actual occurrences into digital values that smart contracts can comprehend. 3. **Inbound and Outbound Oracles**: outbound Oracles transfer information from smart contracts to the outside world, whereas inbound Oracles give information from external sources to smart contracts. 4. **Centralized and Decentralized Oracles**: A centralized Oracle is the only source of data for the smart contract and is managed by a single organization. It can be dangerous to rely just on one source of information because the Oracle's owner determines whether the contract will work. Also, the smart contract will be directly impacted by any harmful intervention from a bad actor. The primary issue with centralized oracles is that they have a single point of failure, which reduces the contracts' resistance to weaknesses and intrusions. On the other hand, avoiding counterparty risk is one of the goals shared by public blockchains and decentralized Oracles. By not depending on a single source of truth, decentralized Oracles improve the accuracy of the data supplied to smart contracts. Decentralized Oracles can also be referred to as consensus Oracles since the smart contract consults several Oracles to assess the validity and correctness of the data. Decentralized Oracle services are offered by several blockchain projects to other blockchains. In prediction markets, where the legitimacy of a particular conclusion may be confirmed by social consensus, decentralized oracles can also be helpful. While decentralized Oracles strive for trustlessness, it is crucial to remember that, like trustless blockchain networks, they do not entirely get rid of trust but rather spread it across many users. 5. **Specialized Oracles**: these Oracles are created so that a single smart contract can use them. This means that a proportionately large number of contract-specific Oracles must be created if one plans to implement numerous smart contracts. These Oracles are said to be exceedingly time and money consuming. This strategy can prove to be quite unworkable for businesses that need to pull data from a number of sources. On the other hand, developers have a lot of freedom to customize contract-specific Oracles to meet unique needs because they may be created from the ground up to service a particular use case. 6. **Human Oracles**: Oracles can occasionally be people who have specific expertise in a certain area. They are able to gather information from numerous sources, investigate its veracity, and convert it into smart contracts. Since human Oracles may use cryptography to confirm their identity, it is unlikely that a fraudster will pretend to be them while supplying tainted information. 7. **Cross-Chain Oracles**: these are another kind of Oracle that can read and write data between several blockchains. Using data from one blockchain to start an activity on another or connecting assets across chains so they may be utilized outside of the native blockchain they were issued on, cross-chain Oracles provide interoperability for moving both data and assets between blockchains. Given the variety of Oracle services, selecting between Oracle service providers often comes down to **reputation**. Users and developers may monitor and discriminate amongst Oracles based on criteria they think are significant thanks to reputation in blockchain Oracle systems. _The fact that Oracles sign and distribute their data onto an immutable public blockchain ledger, allowing for the analysis and presentation of their previous performance history to users through interactive dashboards, contributes to Oracle reputation_. Reputation frameworks offer transparency into each Oracle network's and each Oracle node operator's precision and dependability. Then, users may decide for themselves which Oracles they wish to use to support their smart contracts. Oracle service providers may also exploit their reputation in the off-chain business world to provide customers extra assurances about their dependability."
oracles,"Blockchain Oracles: Use Cases. * **Decentralized Finance (DeFi)** Oracles are necessary for a significant section of the decentralized finance (i.e. DeFi) ecosystem to access financial information regarding assets and markets. Decentralized money markets, for instance, employ price oracles to assess users' borrowing capacity and evaluate if their holdings are undercollateralized and at risk of liquidation. Similarly, Automated Market Makers (AMMs) employ price Oracles to assist concentrate liquidity at the current market price to increase capital efficiency. Synthetic asset platforms use price oracles to link the value of tokens to real-world assets. * **Dynamic NFTs and Gaming** Oracles also make it possible for smart contracts to be used in non-financial use cases, such as NFTs and dynamic NFTs. Non-fungible Tokens (i.e. NFTs) that can alter in appearance, value, or distribution based on external factors like the time of day or the weather are examples of dynamic NFTs. Oracles may also produce verified randomness, which projects can utilize to give NFTs randomized characteristics or to choose random winners in high-demand NFT drops. Verifiable randomness is also used in on-chain gaming applications to produce more captivating and surprising gameplay elements, such as the emergence of random treasure boxes or random matchmaking during a tournament. * **Businesses** Businesses may link their backend systems to any blockchain network using the safe blockchain middleware provided by business cross-chain Oracles. Enterprise systems may read from and write to any blockchain in this way, and they can also use complicated logic to decide how to deploy assets and data among chains and with counterparties that are connected to the same oracle network. As a consequence, institutions no longer need to invest time and development resources in integrating with each individual blockchain. Instead, they can immediately join blockchains that are highly desired by their counterparties and quickly provide support for smart contract services that their customers require. * **Insurance** Insurance smart contracts provide access to physical sensors, online APIs, satellite images, and legal data by using input Oracles to confirm the presence of insurable events throughout claims processing. Using other blockchains or conventional payment networks, output Oracles can give insurance smart contracts a mechanism to pay out on claims."
What is a Blockchain?,"What is a Blockchain?. # What is a Blockchain? A **blockchain** is a series of data records that functions as a distributed, replicated digital ledger of transactions across a network of computer systems. If we compare a blockchain to a conventional database, in the latter one records are written in tables which might be on one or more servers located in different locations, but they are all centrally administered by a database administrator. When it comes to blockchains, instead of the records being written in tables, the records of transactions are compiled into **blocks** which are linked together. A blockchain consists of a stable chain of blocks, and in the context of cryptocurrencies, each one of these blocks stores a list of previously confirmed transactions. Because blockchain transactions take place inside a P2P global network, these are considered borderless and immune to censorship. Hence, a blockchain network serves as a decentralized ledger since it is maintained by several computers located all over the world. This implies that each participant, namely a node, keeps a copy of the blockchain data and interacts with other participants to make sure that everyone is aware of the same information stored in the block. Blockchains also differ from traditional databases in the impossibility for a malicious actor to come in and alter a blockchain record, whereas within traditional databases, this risk is a constant security challenge. In addition to this, blockchains do not need any sort of trust, because these systems are regarded as being trustless because of the absence of supervision by any central authority. On a blockchain system, management is carried out by its participants. A further distinction can be made between databases and blockchains, when it comes to the editing and updating of records: in the context of a traditional database, the database administrator can update and delete records freely, whereas in a blockchain this is impossible. In fact, a blockchain record can only be created, but once written, it can not be altered or deleted in any way. Each block inside the blockchain contains a hash (i.e. a digital fingerprint or unique identifier), timestamped batches of recent valid transactions, and the hash of the previous block. The previous block hash links the blocks together and prevents any block from being altered or a block being inserted between two existing blocks. An additional feature of a blockchain is that all previous records are stored within the current records, and hence, there is a full history of previous transactions. A central concept here is given by **mining operations**. Mining is the process by which cryptocurrency transactions between users are verified and added to the blockchain public ledger. The mining operations are also responsible for introducing new coins into the existing circulating supply. New blockchain transactions are submitted to a pool (i.e. memory pool) when these are created. A miner's responsibility is to arrange these pending transactions into blocks and confirm their authenticity. A block may be compared to a page of the blockchain ledger where many transactions are recorded, alongside with other data. More specifically, a mining node is in charge of building a candidate block from unconfirmed transactions in the memory pool. The miner will next attempt to turn this candidate block into a legitimate,confirmed block. But in order to achieve it, they must solve a challenging mathematical puzzle. This requires a lot of computational resources, but every successfully mined block will give the miner a block reward, consisting of newly created cryptocurrencies plus transaction fees."
What is a Blockchain?,"Blockchains: Use Cases. Blockchain technology has progressively gained popularity since the invention of Bitcoin in 2008, and cryptocurrencies are now recognised on a bigger scale. This technology is mostly used to track cryptocurrency transactions, but it is suitable for a variety of different types of digital data and has other potential applications. Bitcoin, which was created using a thorough and balanced blend of cryptography and game theory, is the oldest, safest, and largest blockchain network. While blockchain is currently primarily used to record and store cryptocurrency transactions, its proponents are creating and testing alternative uses for blockchain, such as the following: 1. **Blockchain for Payment Processing and Money Transfers**: banking transfer fees might be decreased (or eliminated) for transactions handled through a blockchain and paid in a couple of seconds. 2. **Blockchain for Monitoring of Supply Chains**: businesses may easily identify inefficiencies in their supply chains using blockchain, as well as find products in real time and monitor their quality as they move from producers to retailers. 3. **Blockchain for Digital IDs**: Microsoft is experimenting with blockchain technology to help people control their digital identities, while also giving users control over who accesses that data. 4. **Blockchain for Data Sharing**: blockchain could act as an intermediary to securely store and move enterprise data among industries. 5. **Blockchain for Copyright and Royalties Protection**: blockchain technology has the potential to be utilized to build a decentralized database that guarantees the preservation of music rights and rewards musicians with transparent and real-time royalties. Blockchain may potentially benefit open source programmers in a similar way. 6. **Blockchain for Internet of Things (IoT) Network Management**: blockchain has the potential to regulate IoT networks by identifying connected devices, tracking their behavior, assessing their dependability, and automatically determining the dependability of new devices that are linked to the network, such as smartphones and vehicles. 7. **Blockchain for Healthcare**: the healthcare industry may benefit greatly from the use of blockchain. Blockchains are being used by healthcare payers and providers to handle clinical trial data and electronic medical records while upholding regulatory compliance."
What is a Blockchain?,"Who Can Participate in a Blockchain Network?. Each blockchain network has various participants, each one playing a different role: 1. **Blockchain Users**: participants (typically business users) with permissions to join the blockchain network and conduct transactions with other network participants. 2. **Regulators**: blockchain users with special permissions to oversee the transactions happening within the network. 3. **Blockchain Network Operators**: individuals who have special permissions and authority to define, create, manage, and monitor the blockchain network. 4. **Certificate Authorities**: individuals who issue and manage the different types of certificates required to run a permissioned blockchain."
What is a Blockchain?,"Benefits. Blockchains have the following key _positive features_: 1. **Security**: blockchains are very secure, as the data is cryptographically encrypted and it is very difficult and obvious if someone is trying to hack into a blockchain. To delete a record in the blockchain would require the whole chain to be hacked and this would be an immense, obvious, and impractical undertaking. 2. **Resiliency**: as the same information is stored in many different places on the blockchain then blockchains are very resilient as if any part or indeed even the majority of the network was to catastrophically fail then the information stored on the blockchain is still available in full. 3. **Trust**: blockchains are decentralized systems so they have the same benefit of lacking a central authority that behaves in its own interest. Therefore there is a high degree of trust between the participants; the system is run by the participants for the participants."
What is a Blockchain?,"Drawbacks. There are some important _negative features_ of blockchains: 1. **Complexity of Setup**: setting up a blockchain is not a simple task, there are networks of nodes to set-up, the participatory framework established, and numerous components to bring together before you can even begin to store any information on the blockchain. Compared to setting up a traditional database, blockchains are much more complex to set up. 2. **Speed**: it takes longer to add a record to a block and add a block to the chain than it does to simply add a record into a traditional database table. This is a challenge for blockchain based payment systems, as blockchains typically handle fewer transactions per second than conventional payment systems. 3. **Scaling Issues**: blockchains often have scalability issues, because as they grow they get more complex leading to issues of network congestion. 4. **Participation is Required**: blockchains are decentralized systems, so they do need the active participation of members, for example they need to vote on governance proposals affecting the chain and be engaged in order for the blockchain to successfully operate. This means a limited amount of extra work for participants."
What is a Blockchain?,"Types of Blockchain. The architecture of blockchain systems varies greatly, especially in terms of the _consensus_ techniques employed to carry out the crucial role of validating network data (i.e. _Proof-of-Work (PoW)_ and _Proof-of-Stake (PoS)_ mechanisms). The security, usability, and sustainability of the underlying blockchain are affected differently by their own design. Different blockchain networks operate quite differently from one another. The kind of consensus mechanism each blockchain employs is one fundamental distinction. A blockchain adopts a consensus method to decide on information on the network, such as whether transactions are valid and in what order they should happen. Additionally, the consensus method is essential for protecting the blockchain network from bad actors like hackers. We can distinguish among: **public**, **private**, **consortium** and **hybrid** blockchains. 1. **Public Blockchains** are entirely decentralised, permissionless, and open to everybody. Public blockchains allow all nodes to have equal access to the blockchain, the ability to add new blocks of data, and the ability to validate existing blocks of data are largely utilised nowadays for bitcoin mining and trading. These blockchains include Bitcoin, Ethereum, and Litecoin as examples. The majority of public blockchain networks use processes known as _Proof-of-Work_ (_PoW_) or _Proof-of-Stake_ (_PoS_) to provide consensus. 2. **Private Blockchains** are blockchains with permissions that are managed by a single company. Who is permitted to be a node on a private blockchain is decided by the central authority. Additionally, the central authority may not always accord each node an equal right to execute certain responsibilities. Due to restrictions on public access, private blockchains are only partially decentralised. Permissioned blockchains can be structured in various ways to prioritize speed, security, and scalability. 3. **Consortium Blockchains** are permissioned blockchains governed by a group of entities, rather than a single one as private blockchains. As a result, consortium blockchains are more decentralised than private blockchains, which increases their security. But creating consortiums may be a difficult process since it calls for collaboration between several groups, which poses logistical problems and a possible antitrust risk. 4. **Hybrid Blockchains** are blockchains which are managed by a single entity but at the same time have some supervision provided by the public blockchain, which is necessary to carry out specific transaction validations. The IBM Food Trust blockchain is an illustration of a hybrid blockchain. It was created to increase efficiency along the whole food supply chain. **Private** and **Consortium Blockchains** are typically used by enterprises that aim to employ blockchain architecture, but want to ensure specific information remains private, for either regulatory or competitive reasons. On the other hand, **public blockchains** are censorship-resistant and offer broad ecosystems for the development of apps and platforms. **Consortium blockchains**, however, may offer faster transaction processing times and are easier to modify, but are restrictive with limited usage outside of the private consortium. Varying consensus techniques have different effects on accessibility, security, and sustainability, and not all blockchains are created equally. In fact, the most suitable type of blockchain design needs to be fitting the actual use case it wants to serve."
Transaction Fees,"Transaction Fees. # Transaction Fees Any transaction involving the transfer of cryptocurrency will incur fees, whether you are purchasing or withdrawing funds from an exchange or sending or receiving payments in cryptocurrency. Various fee types include: 1. **Transaction** or **Miner Fees**: these vary depending on how many transactions are awaiting their inclusion in the current block and are intended to motivate miners and validators to validate cryptocurrency transactions. 2. **Service** or **Network Fees**: these are applied by third-party providers that enable transactions (e.g. cryptocurrency exchange). These fees are made in addition to any network-generated fee paid to miners. Transaction fees serve **two crucial functions**: 1. **Compensate miners or validators** assisting and confirming the transactions. 2. **Defend the network against spam assaults**: this is because transaction fees lead to a decrease in spam on the network, and large-scale spam assaults become more expensive and more difficult to execute. _Transaction fees thus serve as a basic but efficient spam filter_. Transaction fees are generally affordable for most blockchains, but they can become fairly expensive depending on network activity. Transaction fees might be _modest_ or _substantial_. The fees you pay might also be influenced by market forces. It is important to highlight that the amount of fees you pay impacts your transaction's priority for inclusion in the following validated block. In fact, users who wish to execute their transaction more quickly can even increase the transaction cost to enhance the likelihood that their transaction will be added to the following block of transactions on the blockchain. _The confirmation procedure moves along more quickly the more money that is spent._ Miners, which are in charge of adding transactions to the blockchain to finish them, are required for confirming and securing these transactions on each network. These payments make the effort of miners and validators profitable. Despite the fact that each blockchain is distinct, they all have a limited quantity of transactions that may fit into a single block (e.g. the Bitcoin network only permits a total of 2,800 transactions per block). Depending on how many transactions are awaiting their inclusion, miner fees may change. During periods of high network traffic, miners prioritize the validation of new transactions based on the fee paid by the user. Hence, the user who wants to complete the transaction more quickly can even increase the transaction fee to boost its chances of being included in the next completed block. There are several options available for reducing fees. First of all, you may lower these fees by deciding when you want to complete your transaction. Due to the fact that the majority of cryptocurrency users worldwide are concentrated in the U. S., blockchain networks typically see the highest levels of activity during times when people there are awake. Additionally, traffic is lower during the weekends, particularly on Saturdays. Additionally, as was already said, the fees you pay depend on how quickly you want your transaction to be validated. If you have a high priority transaction and want it to be confirmed faster, you should expect a higher miner fee. If your transaction is not urgent, then a slower verification time means a lower transaction fee. On the Ethereum network, transaction fees are referred to as **gas**. The gas cost accounts for the amount of processing power required to complete a transaction. The native currency of the network, ether (i.e. ETH), is used to monitor the fluctuating price of gas. Like other blockchains, the gas costs can go up or down, and miners are more likely to give your transaction priority if you pay more for gas. The gas limit here specifies the maximum price to be paid for a specific transaction and it should also be taken into account when proceeding with a transaction. The cost of an Ethereum transaction or smart contract execution is determined by the relationship between these two and the gas limit. In fact, gas costs are anticipated to drop as Ethereum moves closer to a Proof-of-Stake mechanism. The network will require less processing power to validate transactions, resulting in a reduction in the amount of gas required to confirm transactions. Although validators prefer higher-paying transactions, network traffic might still have an impact on transaction costs. Visit the following link for further details about _Ethereum 2.0_ and the _Serenity_ upgrade: What is Casper, the Latest Ethereum Upgrade? at https://www.investopedia.com/news/what-casper-latest-ethereum-upgrade/#:~:text=Under%20the%20Casper%20protocol%2C%20as,on%20that%20block%20in%20ether **On the Fetch.ai network, the gas mechanism is made simple and gives you an option to pick high, medium, or low fees, in addition to allowing you to manually set the amount you wish to pay**. Fetch.ai does operate some of the validators on the network, which further gives it influence over the gas fee levels. Even though some constraints are set by Fetch.ai on gas fees, the decentralized nature of the network guarantees that transaction fees are not set by any central authority, and the actual level of gas is set by each of the validators on the Fetch network. Fetch.ai has the philosophy that having high gas fees does no good for anyone, and because of this, the Fetch team wants to encourage everyone to use the network, and trade and transact using $FET tokens. Low fees encourages higher network traffic, and this in turn means more transactions and activity and therefore more fees being paid in general. However, $FET that are traded and transferred on other networks are subject to the gas fees that those networks charge and Fetch has no control whatsoever over those fees. The fees gathered on the Fetch network are then distributed among the stakeholders (i.e. validators and community stakeholders). Gas fees on the Fetch network are very very low when compared to other networks. As a general comparison, Juno Network, another ecosystem blockchain within the Cosmos ecosystem has fees that on average are $0.05 USD per transfer, whereas Fetch.ai transfers cost $0.000000000000001 USD at the present time. These gas fees are calculated in an extremely fair way, with the fee being directly proportional to the computing power needed to complete the process. So, for instance, a simple purchase transaction takes less computing power than activating a smart contract, therefore the associated fee will be lower. **There is full transparency too, as it is always clear what the gas fee will be before making a transaction, and so there are no hidden surprises.**"
Consensus Mechanisms,"Consensus Mechanisms. # Consensus Mechanisms A blockchain is a decentralized distributed network that offers immutability, privacy, security, and transparency. Despite the absence of a central authority to confirm and authenticate the transactions, every Blockchain transaction is regarded as being totally safe and validated. Only the presence of the consensus protocol, a fundamental component of every Blockchain network, makes this feasible. A consensus algorithm is a process that allows every peer in the Blockchain network to agree on the distributed ledger's current state. Consensus algorithms accomplish dependability in the Blockchain network and build confidence amongst unidentified peers in a distributed computing setting in this way. Hence, the consensus mechanism ensures that every new block added to the Blockchain is the sole version of the truth that has been accepted by every node. The following are the most utilized consensus mechanisms nowadays: 1. **Proof-of-Work (PoW)**: One of the most prominent blockchain technologies is the PoW consensus process, which was initially made popular by Bitcoin. Miners (i.e. validators) and the power they need to do the computations required to validate transactions are the key elements that distinguish PoW systems. Miners use computer hardware to power network nodes that use processing power to solve algorithmic mathematical computational puzzles, known as proofs of work. The miner who completes the puzzle first validates the blockchain's most recent block of transactions. In order to create a reliable record of data for the whole network, the successful miner broadcasts the new block to all other nodes, which in turn authenticate its accuracy and add that block to their copies of the blockchain. This verification procedure establishes consensus. A new block cannot be added to the network until this data has been verified. When a miner validates a new block of data this latter one is then added to the PoW blockchain, with the first miner completing the validation process being rewarded with newly created cryptocurrency, known as the block reward (in the case of Bitcoin, block rewards are in terms of BTC). Proof-of-Work Blockchains seek to generate blocks at regular intervals. PoW networks are constrained in terms of their speed and scalability due to how the high energy-intensive process these imply. Massive quantities of processing hash power must be used to solve the computational challenge, which uses a lot of energy. Some have called the PoW model an environmental catastrophe because of the enormous number of blocks verified on large PoW blockchains per day. In fact, the more intensive the validation process, the more computational power is adopted to solve the puzzle and this leads to a higher competition among validators, which equals harder proofs of work and more energy consuming operations. For instance, the Bitcoin network consumed as much power as Chile and had a carbon footprint that was equal to that of New Zealand in 2021. Technology advancement in the blockchain sector has put a lot of emphasis on addressing the negative environmental effects of crypto mining, and several alternatives have surfaced. PoW blockchains have typically offered stronger security while preserving significant decentralization, despite their speed and scalability restrictions. Due to the distributed nature of PoW systems, it would be very expensive for a bad actor to seize control of the majority of the network's computing power and take over the blockchain. Typically, it is unable to overcome the high expenses of the hardware, power, and computing. 2. **Proof-of-Stake (PoS)**: The second-most popular consensus method, Proof of Stake, addresses many of the problems of Proof-of-Work blockchains, including their slowness, lack of scalability, wasteful energy use, and high entry barriers. Polkadot, Avalanche, and Cardano are a few instances of contemporary market-dominating PoS blockchains. PoS blockchains only have validators for transaction validation, not miners. Similar to PoW systems, validators operate network nodes and validate data, but there is no energy-intensive computing procedure required to earn the privilege to validate. Validators stake some of the native tokens of the blockchain to qualify for selection as a validator node rather than working to solve proofs of work. The potential validator will effectively stake blockchain-native crypto tokens to act as collateral. On a PoS blockchain, when it is time to validate the data contained in a transaction block, the system chooses a validator at random to do so. The quantity of tokens a validator has staked is one such factor that, while somewhat random, might increase the likelihood that they will be picked as a validator. The process starts with a new block after the block is confirmed, and the validator is typically compensated with network transaction fees. By asking validators to stake their tokens, Proof-of-Stake blockchains make the network safe and maintain validators' integrity. Through a procedure known as slashing, validators that engage in malevolent or incompetent behaviour lose their stake and network access. By using this incentive system, validators are certain to benefit more from following the law than from breaching it. Every PoS blockchain has its own unique validation standards, however on the majority of platforms, you must also meet certain criteria in order to be chosen as a validator node. The entrance barrier to PoS blockchains for validators is arguably lower, when compared to PoW blockchains, since they do not need to invest in expensive hardware or incur significant electricity costs. However, you still need to have enough cryptocurrency to stake if you want to become a validator. However, there can be particular hardware requirements for various platforms adopting a PoS mechanism. While PoS is not nearly as resource-consuming as PoW, certain PoS blockchains' validator nodes may require strong hardware or software specifications because they may be the need of handling a lot of transactions at once. Additionally, PoS blockchains have been accused of being plutocratic since validators' control over the network is frequently proportionally correlated with the quantity of their stake. Thus, even though the PoS validation process uses significantly less energy and is quicker and less expensive, it does have some drawbacks, such as the potential for power concentration in the hands of individuals on the network who have amassed a sizable amount of the platform's governance cryptocurrency. 3. **Delegated Proof-of-Stake (DPoS)**: it is a well-liked development of the Proof of Stake idea in which network users choose delegates to validate the following block. Delegates may also be referred to as block producers or witnesses. By pooling your tokens into a staking pool and tying them to a specific delegate, you may cast a vote for delegates using DPoS. The argument for DPoS is that it is a more decentralized and equitable method of reaching consensus than just Proof of Stake. 4. **Proof of Burn (PoB)**: With PoB, validators burn coins by sending them to an address from which they are irretrievably lost, as opposed to spending money on expensive hardware equipment. Validators obtain the right to mine on the network based on a random selection procedure by sending the coins to an unreachable address. Burning coins here entails a long-term commitment on the part of validators in return for a temporary loss. Miners may burn either the native money of the Blockchain application or the currency of an alternate chain, such as bitcoin, depending on how the PoB is implemented. The more coins they burn, the better are their chances of being selected to mine the next block. While PoB is an interesting alternative to PoW, the protocol still wastes resources needlessly. And it is also questioned that mining power simply goes to those who are willing to burn more money. 5. **Proof of Capacity (PoC)**: PoC, often referred to as Proof of Space (PoSpace), is a mining technique that is based on the amount of hard disk space that a miner has available. Here, miners generate a list of all the possible hashes beforehand in a process called plotting. Such plots are then stored on hard drives. The more storage capacity a miner has, the more possible solutions available. The more solutions, the higher the chances of possessing the correct combination of hashes and thus the higher the possibility of winning the reward. PoC makes it possible for the typical individual to take part in the network because it does not need expensive or specialized equipment. As a result, it is a more decentralized and less energy-intensive alternative to some of the more widely used consensus mechanisms. However, as of yet not many developers have chosen to adopt the system, and there are concerns about its susceptibility to malware attacks. 6. **Proof of Elapsed Time (PoET)**: it is one of the most ethical consensus algorithms, selecting the following block exclusively by ethical grounds. In Blockchain networks with permissions, it is commonly employed. Every validator on the network has an equal opportunity to construct their own block using this process. To achieve this, each node adds a proof of their wait to the block after waiting for a different period of time. The produced blocks are sent out to the network for review by other users. The validator with the lowest timer value in the proof portion wins. The winning validator node's block is added to the Blockchain. There are additional checks in the algorithm to stop nodes from always winning the election, stop nodes from generating a lowest timer value. 7. **Proof of Activity (PoA)**: it is a consensus approach that combines PoW and PoS. Similar to PoW, the mining process starts here with miners vying to use the most powerful processing power to solve a complex mathematical problem. The system then turns to resemble PoS when the block has been mined, with the successfully created block header being sent to the PoA network. The new block is then randomly validated by a number of validators who sign off on the hash. The more crypto a validator possesses, similar to PoS, the better their chances are of being chosen. The block is introduced to the blockchain network and made available to record transactions once each selected validator has signed it. The miner and validators then split the block rewards. The PoA system has come under fire for its energy-intensive mining phase and inherent favoritism towards validators holding a bigger amount of coins, despite being built with the purpose of integrating the best aspects of PoW and PoS while avoiding their drawbacks. 8. **Proof of Authority (PoA)**: this mechanism chooses its validators based on their track record. Validators in PoA do not stake coins. Instead, in order to have the ability to validate blocks, they must risk their reputations. The majority of blockchain systems, in contrast to this, often do not need participants to disclose their identities. This approach is far less resource-intensive than some of its predecessors, especially PoW, as it requires essentially little computational power. It is a highly favored alternative for private networks since it is also one of the more affordable choices. Although very scalable, the decentralization aspect suffers since only a small number of people may join the network. The necessity that the validators be recognised further raises the danger of fraud and outside interference. When it comes to confirming the legitimacy of distributed blockchain systems, there is no one-size-fits-all method. Each consensus technique has a unique set of benefits and drawbacks. While PoW and PoS are undoubtedly the most common, new and developing algorithms are always emerging."
