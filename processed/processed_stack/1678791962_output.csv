title,text
Governance,Governance. # Governance In order to be able to take part in the governance you either need to be running a full validator node or you need to have have delegated stake to an existing validator
Governance,Stake Delegation. In order to delegate stake to a validator the following command should be used: Where the begins with the prefix and the field contains the currency denomination. For example:
Governance,"Proposals Overview. There are three types of proposal: - **Text Proposals**: These are the most basic type of proposal. They can be used to get the opinion from participants of the network on a given topic. - **Parameter Proposals**: These proposals are used to update the value of an existing software parameter of the network. - **Software Upgrade Proposals**: These are used to propose an upgrade of the software, particularly in cases where the software changes might not necessary be backwards compatible or in some way present a major update to the network."
Governance,"The Proposal Process. Any FET holder can submit a proposal. In order for the proposal to be open for voting, it needs to come with a deposit that is greater than a parameter called *minDeposit*. The deposit need not be provided in its entirety by the submitter. If the initial proposer's deposit is not sufficient, the proposal enters the **deposit period** status. Then, any FET holder can increase the deposit by sending a *depositTx* transaction to the network. Once the deposit reaches *minDeposit*, the proposal enters the **voting period**, which lasts 2 weeks. Any bonded FET holder can then cast a vote on this proposal. The user has the following options for voting: * Yes * No * NoWithVeto * Abstain At the end of the voting period, the proposal is accepted if there are more than 50% Yes votes (excluding Abstain votes) and less than 33.33% of NoWithVeto votes (excluding Abstain votes)."
Governance,"Generating Proposals. When creating a proposal, the user will create a proposal JSON file with all the relevant information. An example of a text proposal is shown below: It is always recommended that the description of a text proposal has a link to a Github issue with the full proposal text along with the discussions about it. Once the user has created the JSON file, to generate the text propsal on chain run the following command:"
Governance,"Increasing the deposit for a proposal. If a user wants to increase the deposit of a proposal they would run the following command: For example: To get the proposalID, use the txhash obtained when the proposal was submitted and run the following command:"
Governance,Listing current proposals. Current proposals are visible from the block explorer and using the CLI. To get the list of current proposals and their corresponding *proposal-ids* the run the following command:
Governance,"Voting on a proposal. To vote for a proposal run the following command For example: <div class=""admonition note""> <p class=""admonition-title"">Note</p> <p>When using CLI commands make sure that your CLI is pointing at the correct network. See the <a href=""../cli-introduction/"">CLI introduction documentation</a> for more details</p> </div>"
Block Explorer,Block Explorer. # Block Explorer Each of the networks at ./live-networks.md has a dedicated block explorer web site associated with it. This is a useful tool for monitoring network activity.
Block Explorer,"Logging in with the Ledger Nano. Return to the block explorer landing page and click on the key button in the top right corner. You'll then be prompted to ""Sign in With Ledger"". You must accept this request on your ledger nano device. After completing this process, the key button will be replaced by a person icon with a link to your personal address page, which keeps track of the activity that you have performed on the test-net."
Block Explorer,"Getting Testnet Tokens from the Faucet. For networks that support it, you can obtain tokens for your account by copying the address and pasting it into the token faucet. Then, return to the main page, press the ""Get Funds"" button and paste your address in the pop-up. Afterwards you can return to your address page (via the person icon) and should observe that you have been allocated 1 TESTFET."
Block Explorer,"Transferring Tokens to another Address. After receiving tokens, you can send these to another address using the purple Transfer button on your address page. This will trigger a pop-up that prompts you to specify the destination address and the amount you wish to transfer. After filling in this information, you will be asked to sign the transaction using your ledger nano. The confirmation that the transaction has been broadcast gives two links that can be used to check that the transaction has been executed on the blockchain using either the transaction hash or your account page. <div class=""admonition note""> <p class=""admonition-title""><b>Note:</b></p> <p>The transaction format includes a memo field that can be used to check the transaction information on the ledger nano display.</p> </div>"
Block Explorer,"Delegating Stake to a Validator. You can delegate your test-net tokens to a validator who is operating the network by clicking on the _Validators_ tab, and selecting one of the validators that you wish to delegate stake towards. In the _Voting Power_ panel there is an option to tokens. Pressing this button will trigger a pop-up that prompts you to select a delegation amount and then sign the transaction with your Ledger Nano device. After delegating tokens, buttons labelled with and will appear. The delegation of tokens to a validator provides you with a reward for helping to secure the network. It is also possible to delegate your tokens to a different validator using a transaction. You can return any bonded tokens to your address by submitting an request, which will trigger the tokens to be returned after 21 days have elapsed. The rewards that you receive from delegating tokens to a validator are shown in the account page. These can be sent to your address by sending a transaction."
BLS signatures,BLS signatures. # BLS signatures The BLS algorithm can be selected when creating new keys and signing transactions. BLS supported keys are particularly useful for the increasing the efficiency of multi-signature transactions at the cost of simplicity in verification. It affords the users a shorter and yet still robust grouping of each signature from party members without the sacrifice of security on each multi-signature transaction.
BLS signatures,"Creating BLS keys. ,Example:"
BLS signatures,"BLS Transactions and signatures. ,Example: *Ensure that the 'Ron' key has some funds before performing this example.*"
Setting up a Validator Node,"Setting up a Validator Node. # Setting up a Validator Node This guide assumes that you have successfuly installed at ../../building/, configured and connected at ../../joining-a-testnet/ your validator to the desired network."
Setting up a Validator Node,Creating a validator. To create a validator on the network you will need to send a transaction to the network bonding / staking your FET tokens. This process registers you as a validator and if you are one of the chosen validators you will start to produce blocks. **Dorado Example** Before trying to create a validator you should verify that you have some tokens available beforehand. The easiest way to do this is via the CLI at ../../cli-tokens/. Here is an sample of a typical command line command that will register the node as running the validator.
Setting up a Validator Node,"Editing a validator. Over time it is possible that validators will want to adjust various settings about their nodes. This can be simple things like the associated website for a validator or more consequential actions like altering the commission rate. In either case, should a validator choose to make this update they would send an ""edit-validator"" transaction to the network. These can be created in a similar way to the ""create-validator"" transactions as shown below:"
Setting up a Validator Node,"Unbonding a validator. When / if a validator wants to stop being a validator for any reason, they can unbond some or all of their staked tokens. This is done with the following command. An example of the command is given in the following example:"
Validators Overview,Validators Overview. # Validators Overview
Validators Overview,"Introduction. The Fetch.ai Ledger relies on a set of validators that are responsible for committing new blocks in the blockchain. These validators participate in the consensus protocol by broadcasting votes which contain cryptographic signatures signed by each validator's private key. Validator candidates can bond their own FET and have FET delegated, or staked, to them by token holders. The validators are determined by who has the most stake delegated to them. The top N validator candidates with the most stake will become the active validators. Validators and their delegators will earn FET as block provisions and tokens as transaction fees through execution of the consensus protocol. Transaction fees will be paid in FET. If validators double sign, are frequently offline or do not participate in governance, their staked FET (including FET of users that delegated to them) can be slashed. The penalty depends on the severity of the violation."
Validators Overview,"Hardware. The hardware resources for running a validator node largely depend on the network load. As a recommended configuration we suggest the following requirements - 2 x CPU, either Intel or AMD, with the SSE4.1, SSE4.2 and AVX flags (use lscpu to verify) - 8 GB RAM - 500 GB SSD - 100 Mbit/s always-on internet connection - Linux OS (Ubuntu 18.04 or 20.04 recommended) / MacOS Uptime in incredibly important for being a validator. It is expected that validators will have appriopriate redundancies for compute, power, connectivity etc. While the blockchain itself it highly replicated it is also expected that validators will perform local storage backups in order to minimise validator down time."
Validators Overview,"Set Up a Website. Set up a dedicated validator's website and signal your intention to become a validator on our Discord at https://discord.gg/UDzpBFa server. This is important since delegators will want to have information about the entity they are delegating their FET to. Strictly speaking this is not necessary, however, it is recommended. As a validator on the network you will want to get other community users to delegate stake to your validator. The more combined stake that a validate has then the great share of the block rewards they will take."
Validators Overview,Seek Legal Advice. Seek legal advice if you intend to run a Validator.
Validators Overview,Community. We highly recommdend to check out the validator community on the discord channel for more information and to see that latest announcements about becoming a validator. * Discord at https://discord.gg/UDzpBFa
security,security. 
security,"Validator Security. Each validator candidate is encouraged to run its operations independently, as diverse setups increase the resilience of the network. Validator candidates should commence their setup phase now in order to be on time for launch."
security,"Key Management - HSM. It is mission critical that an attacker cannot steal a validator's key. If this is possible, it puts the entire stake delegated to the compromised validator at risk. Hardware security modules are an important strategy for mitigating this risk. HSM modules must support signatures."
security,"Sentry Nodes (DDOS Protection). Validators are responsible for ensuring that the network can sustain denial of service attacks. One recommended way to mitigate these risks is for validators is to carefully structure their network topology in a so-called sentry node architecture. Validator nodes should only connect to full-nodes they trust because they operate them themselves or are run by other validators they know socially. This architecture shifts the burden of denial-of-service from the validator's node directly to its sentry nodes, and may require new sentry nodes be spun up or activated to mitigate attacks on existing ones. Sentry nodes can be quickly spun up or change their IP addresses. Because the links to the sentry nodes are in private IP space, an internet based attacked cannot disturb them directly. This will ensure validator block proposals and votes always make it to the rest of the network. To setup your sentry node architecture you can follow the instructions below: Validators nodes should edit their config.toml: Sentry Nodes should edit their config.toml:"
Bug Bounty Program,"Bug Bounty Program. # Bug Bounty Program The Fetch bug bounty program provides incentives for developers and security experts to report vulnerabilities in the Fetch ecosystem. The Fetch team has undertaken risk mitigation measures to limit the potential impacts of bugs or intentional misuse of the software and to ensure that all software has been internally audited and thoroughly tested. In addition to the implemented safety measures, we are offering a bug bounty for the core components of the Fetch ecosystem as outlined under t"
Bug Bounty Program,Scope. 
Bug Bounty Program,"Classification. ,Critical Bugs (awards up to 20,000 FET tokens): Critical bugs are those that result in loss of funds or lead to a lack of availability of the network. This may be as a result of vulnerabilities found in the deployed and supported versions of the blockchain client, smart contracts or any of the other software outlined within the Scope at #scope section. ,Non-critical Bugs (awards up to 10,000 FET tokens): Non-critical bugs are those that cannot cause loss of funds or any other type of economic loss. These types of bugs affect the experience of developers or users of the network and have a perceived or Fetch suggested workaround. Awards are issued subject to reclassification and verification by the Fetch team."
Bug Bounty Program,"How to Report. Please follow the steps listed below to report your bug: - In an email, describe the issue clearly with reference to the underlying source code and indicate whether the bug is **Critical** or **Non-critical**. - Attach all relevant information that is required to reproduce the bug in a test environment. - Include the relevant version information associated with the faulty software of the components along with any other relevant system information such as OS versions. - Include suggested solutions and/or mitigations (if known). - Send this email to bounty@fetch.ai at mailto:bounty@fetch.ai and start the subject with your classification **Critical** or **Non-critical** followed by a short title of the bug. The Fetch team will review your information and your classification of the bug. After reviewing, one of the Fetch developers will set out to reply within 2 working days to confirm whether the bug meets the requirements of the bug bounty program or to request more time to complete this assessment. The Fetch team will also post updates on the #bugs channel on our Discord server: <https://discord.gg/M9XmgyWzup>. For non-critical bugs, the Fetch team will create an issue or a pull request allowing you to follow the progress on the bug fix. For critical bugs that can result in loss of funds, it is important that the Fetch team has an opportunity to deploy a patched version before the exploit is acknowledged publicly. Hence, critical bugs and their fixes will be shared after the code is patched to prevent the targeting of such exploits."
Bug Bounty Program,"Terms and Conditions. These include, but are not limited to: * Bounty awards are made at the sole discretion of Fetch.ai and are subject to change and verification. * We will make every attempt to respond to all submissions promptly and to provide rewards in a timely manner but do not make any guarantees as to how long the processing of claims will take. * All users warrant that they are legally able to receive bounties. More specifically: they are of the appropriate age, the work they are submitting is their own and that they are resident in a territory that allows payment of such rewards. * Submitters must be willing to undergo any Know Your Customer (KYC) or Anti-Money Laundering (AML) checks as required. * This program is not open to Fetch.ai employees or contractors, past or present. * Fetch.ai reserves the right to alter or discontinue the Bug Bounty Program without notice."
Welcome to Fetch.ai Ecosystem,"Welcome to Fetch.ai Ecosystem. # Welcome to Fetch.ai Ecosystem <div id=""header-image-div""><img id=""header-image"" src=""./images/fetchai.png"" alt=""interconnected systems such as parking, cloud, robots, and data""></div>"
Welcome to Fetch.ai Ecosystem,"What is Fetch.ai?. Our mission is to build the infrastructure required for developing modern, decentralized and peer-to-peer (P2P) applications that are free from centralized rent-seeking. We achieve this by providing open-source software tools which you can use together with our interoperable decentralized network, to harness the power of AI and automation, and carry out complex tasks in the _digital economy_."
Welcome to Fetch.ai Ecosystem,"Get Started. The fetch ecosystem is made up of various tools and frameworks that help you build and jump-start your very own decentralized applications. Select one below to dive right in! <div id=""diagram-container""> <div class=""diagram-row""> <p class=""diagram-label"">User facing tools</p> <div class=""diagram-row-container""> <a href=""https://aea-registry.fetch.ai/"" target=""_blank"" class=""diagram-item""><div>AEA Registry</div></a> <a href=""https://aea-manager.fetch.ai/"" target=""_blank"" class=""diagram-item""><div>AEA Manager</div></a> <a href=""/fetch-wallet"" class=""diagram-item""><div>Fetch Wallet</div></a> <a href=""https://explore-fetchhub.fetch.ai/"" target=""_blank"" class=""diagram-item""><div>Explorer</div></a> </div> </div> <div class=""diagram-row""> <p class=""diagram-label"">Tools that use the chain</p> <div class=""diagram-row-container""> <div class=""diagram-item""> <a class=""item-link"" href=""/aea-framework-documentation"" > AEA</br/>Framework <a href=""/aea-framework-documentation/acn"" class=""diagram-item-child""> <div>ACN</div> </a> </a> </div> <div class=""diagram-item""> <a class=""item-link"" href=""/uAgents"" >μAgents</a> </div> </div> </div> <div class=""diagram-row""> <p class=""diagram-label"">Tools to directly interact with the chain</p> <div class=""diagram-row-container""> <a href=""/CosmPy"" class=""diagram-item"">CosmPy</a> <a href=""/Jenesis"" class=""diagram-item"">Jenesis</a> </div> </div> <div class=""diagram-row""> <p class=""diagram-label"">The chain</p> <div class=""diagram-row-container""> <div class=""diagram-item""> <a class=""item-link"" href=""/ledger_v2"" > Ledger <a class=""diagram-item-child-disabled""> <div>Cosmwasm</div> </a> </a> </div> </div> </div> </div> You can also jump straight into our GitHub repos: - Fetch Wallet at https://github.com/fetchai/fetch-wallet{:target=""\_blank""} - AEA Framework (& ACN) at https://github.com/fetchai/agents-aea{:target=""\_blank""} - μAgents at https://github.com/fetchai/uAgents{:target=""\_blank""} - CosmPy at https://github.com/fetchai/cosmpy{:target=""\_blank""} - Jenesis at https://github.com/fetchai/jenesis{:target=""\_blank""} - Ledger (fetchd) at https://github.com/fetchai/fetchd{:target=""\_blank""}"
Welcome to Fetch.ai Ecosystem,"Bug Reports & Feature Requests. If you want to report a bug or request a feature: - AEA Framework at https://github.com/fetchai/agents-aea/issues/new/choose{:target=""\_blank""} - μAgents at https://github.com/fetchai/uAgents/issues/new{:target=""\_blank""} - Cosmpy at https://github.com/fetchai/cosmpy/issues/new/choose{:target=""\_blank""} - Jenesis at https://github.com/fetchai/jenesis/issues/new/choose{:target=""\_blank""} - Ledger (fetchd) at https://github.com/fetchai/fetchd/issues/new/choose{:target=""\_blank""} - Documentation at https://github.com/fetchai/docs/issues/new/choose{:target=""\_blank""} Want to report a security vulnerability? Visit our Bug Bounty at https://docs.fetch.ai/bug_bounty/."
Welcome to Fetch.ai Ecosystem,"Questions & General Discussions  . Visit fetch.ai developer forums: - Fetch Wallet at https://github.com/fetchai/fetch-wallet/discussions{:target=""\_blank""} - AEA Framework at https://github.com/fetchai/agents-aea/discussions{:target=""\_blank""} - μAgents at https://github.com/fetchai/uAgents/discussions{:target=""\_blank""} - CosmPy at https://github.com/fetchai/cosmpy/discussions{:target=""\_blank""} - Jenesis at https://github.com/fetchai/jenesis/discussions{:target=""\_blank""} - Ledger (fetchd) at https://github.com/fetchai/fetchd/discussions{:target=""\_blank""} Chat with Fetch.ai developers on discord at https://bit.ly/3ra5uMI{:target=""\_blank""}."
fund_form,"fund_form. <h1>The Developer Fund</h1> <div class=""form-wrapper""> <form onsubmit=""onSubmitHandler(event)""> <p> Following the announcement of a new development fund for growing the Fetch.ai ecosystem, we are accepting applications from prospective projects, either from Cosmos or EVM, to build upon the Fetch.ai network or scale using it's tools. </p> <p> Please fill the form below to apply for the developer grant. </p> <div class=""group""> <div class=""form-label""> <label>Name</label> <span class=""required-mark"">*</span> </div> <input type=""text"" id=""name"" name=""name"" placeholder=""Your answer"" required=""required"" /> <span class=""bar""></span> </div> <div class=""group""> <div class=""form-label""> <label>Project/Company Name [If available]</label> <span class=""required-mark"">*</span> </div> <input type=""text"" id=""projectName"" name=""projectName"" placeholder=""Your answer"" required=""required"" /> <span class=""bar""></span> </div> <div class=""group""> <div class=""form-label""> <label >Contact Email (if you're applying on behalf of a project or a company, please enter the email of the main point of contact)</label > <span class=""required-mark"">*</span> </div> <input type=""email"" id=""contactEmail"" name=""contactEmail"" placeholder=""Your answer"" required=""required"" /> <span class=""bar""></span> <span id=""emailError""></span> </div> <div class=""group""> <div class=""form-label""> <label >Project links [Please provide Github, Website, Twitter if available]</label > <span class=""required-mark"">*</span> </div> <input type=""text"" id=""projectLinks"" name=""projectLinks"" placeholder=""Your answer"" required=""required"" /> <span class=""bar""></span> </div> <div class=""group""> <div class=""form-label""> <label>Which category does your project fall under?</label> <span class=""required-mark"">*</span> </div> <div class=""radio-group""> <label> <div class=""radio""> <input type=""radio"" name=""category"" value=""dApps"" id=""dApps"" /> <label for=""dApps"">dApps</label> </div> </label> <label> <div class=""radio""> <input type=""radio"" name=""category"" value=""On-chain analytics"" id=""analytics"" /> <label for=""analytics"">On-chain analytics</label> </div> </label> <label> <div class=""radio""> <input type=""radio"" name=""category"" value=""Automation"" id=""automation"" /> <label for=""automation"">Automation</label> </div> </label> <label> <div class=""radio""> <input type=""radio"" name=""category"" value=""DeFi"" id=""DeFi"" /> <label for=""DeFi"">DeFi</label> </div> </label> <label> <div class=""radio""> <input type=""radio"" name=""category"" value=""Infrastructure"" id=""infrastructure"" /> <label for=""infrastructure"">Infrastructure</label> </div> </label> <label> <div class=""radio""> <input type=""radio"" name=""category"" value=""NFTs"" id=""nfts"" /> <label for=""nfts"">NFTs</label> </div> </label> <label> <div class=""radio""> <input type=""radio"" id=""otherRadioButton"" name=""category"" value=""Other"" /> <label for=""otherRadioButton"">Other:</label> </div> <div class=""extra""> <input type=""text"" id=""otherCategoryFieldValue"" value="""" onkeypress=""selectCategoryOtherRadioButton()"" /> <span class=""bar""></span> </div> </label> </div> </div> <div class=""group""> <div class=""form-label""> <label >Project description [Please outline in detail the project you're seeking to receive a grant for]</label > <span class=""required-mark"">*</span> </div> <textarea id=""projectDescription"" name=""projectDescription"" placeholder=""Your answer"" required=""required"" cols=""5"" rows=""5"" ></textarea> <span class=""bar""></span> </div> <div class=""group""> <div class=""form-label""> <label>Have you received any funding previously?</label> <span class=""required-mark"">*</span> </div> <div class=""radio-group""> <label> <div class=""radio""> <input type=""radio"" id=""receivedFundOne"" name=""receivedFund"" value=""Yes [provide the source(s)]"" /> <label for=""receivedFundOne"">Yes:</label> </div> <div class=""extra""> <input type=""text"" id=""receivedFundOneFieldValue"" value="""" onkeypress=""selectReceivedFundOneRadioButton()"" /> <span class=""bar""></span> </div> </label> <label> <div class=""radio""> <input type=""radio"" name=""receivedFund"" value=""No"" id=""receivedFundTwo"" /> <label for=""receivedFundTwo"">No</label> </div> </label> </div> </div> <div class=""group""> <div class=""form-label""> <label >Please share any details on the project tokenomics [if available]</label > <span class=""required-mark"">*</span> </div> <textarea id=""projectTokenomics"" name=""projectTokenomics"" placeholder=""Your answer"" required=""required"" cols=""5"" rows=""5"" ></textarea> <span class=""bar""></span> </div> <div class=""group""> <div class=""form-label""> <label>What do you want to achieve through your project?</label> <span class=""required-mark"">*</span> </div> <textarea type=""text"" id=""achievementGoal"" name=""achievementGoal"" placeholder=""Your answer"" required=""required"" cols=""5"" rows=""5"" ></textarea> <span class=""bar""></span> </div> <div class=""group""> <div class=""form-label""> <label>Project development timelines</label> <span class=""required-mark"">*</span> </div> <textarea type=""text"" id=""projectTimelines"" name=""projectTimelines"" placeholder=""Your answer"" required=""required"" cols=""5"" rows=""5"" ></textarea> <span class=""bar""></span> </div> <div class=""group""> <div class=""form-label""> <label>Project Milestones</label> <span class=""required-mark"">*</span> </div> <textarea type=""text"" id=""projectMilestones"" name=""projectMilestones"" placeholder=""Your answer"" required=""required"" cols=""5"" rows=""5"" ></textarea> <span class=""bar""></span> </div> <div class=""group""> <div class=""form-label""> <label>What is the funding amount you are looking for?</label> </div> <div class=""radio-group""> <label> <div class=""radio""> <input type=""radio"" name=""projectFunding"" value=""50000"" id=""projectFunding1"" /> <label for=""projectFunding1"">Less than $50,000</label> </div> </label> <label> <div class=""radio""> <input type=""radio"" name=""projectFunding"" value=""50000-150000"" id=""projectFunding2"" /> <label for=""projectFunding2"">Between $50,000 to $150,000</label> </div> </label> <label> <div class=""radio""> <input type=""radio"" name=""projectFunding"" value=""+150000"" id=""projectFunding3"" /> <label for=""projectFunding3"">More than $150,000</label> </div> </label> </div> </div> <div class=""group""> <div class=""form-label""> <label >Funding request breakdown [Please describe how the funds will be used]</label > <span class=""required-mark"">*</span> </div> <textarea type=""text"" id=""fundingBreakdown"" name=""fundingBreakdown"" placeholder=""Your answer"" required=""required"" cols=""5"" rows=""5"" ></textarea> <span class=""bar""></span> </div> <div class=""group""> <div class=""form-label""> <label >Additional attachments [Please share links - e.g dropbox/google drive]</label > <span class=""required-mark"">*</span> </div> <textarea type=""text"" id=""additionalAttachments"" name=""additionalAttachments"" placeholder=""Your answer"" required=""required"" cols=""5"" rows=""5"" ></textarea> <span class=""bar""></span> </div> <div class=""group""> <button type=""submit"" id=""submit_btn"" class=""btn btn-submit""> Submit </button> </div> </form> <!-- The snackbar --> <div id=""snackbar""> <div id=""snackbar_text""></div> </div> </div> <script type=""text/javascript""> const nameInput = document.getElementById(""name""); const projectNameInput = document.getElementById(""projectName""); const contactEmailInput = document.getElementById(""contactEmail""); const projectLinksInput = document.getElementById(""projectLinks""); const projectDescriptionInput = document.getElementById(""projectDescription""); const projectTokenomicsInput = document.getElementById(""projectTokenomics""); const achievementGoalInput = document.getElementById(""achievementGoal""); const projectTimelinesInput = document.getElementById(""projectTimelines""); const projectMilestonesInput = document.getElementById(""projectMilestones""); const fundingBreakdownInput = document.getElementById(""fundingBreakdown""); const additionalAttachmentsInput = document.getElementById( ""additionalAttachments"" ); const emailErrorField = document.getElementById(""emailError""); const submitButton = document.getElementById(""submit_btn""); const submitButtonText = submitButton.innerText; const validateEmail = (email) => { return String(email) .toLowerCase() .match( /^(([^<>()[\]\\.,;:\s@""]+(\.[^<>()[\]\\.,;:\s@""]+)*)|("".+""))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/ ); }; const onSubmitHandler = (event) => { event.preventDefault(); const formData = new FormData(event.target); const formProps = Object.fromEntries(formData); let categoryValue = """"; let receivedFundValue = """"; if (formProps.category === ""Other"") { categoryValue = document.getElementById(""otherCategoryFieldValue"").value; } else { categoryValue = formProps.category; } if (formProps.receivedFund === ""Yes"") { receivedFundValue = document.getElementById( ""receivedFundOneFieldValue"" ).value; } else { receivedFundValue = formProps.receivedFund; } if (formProps.contactEmail.trim() === """") { emailErrorField.innerText = ""Email address is required""; return; } else { emailErrorField.innerText = """"; } if (!validateEmail(formProps.contactEmail)) { emailErrorField.innerText = ""Please enter a valid email address""; return; } else { emailErrorField.innerText = """"; } submitButton.disabled = true; submitButton.innerHTML = ; fetch(""{{fund_form_api}}/api/docs"", { method: ""POST"", headers: { ""Content-Type"": ""application/json"", }, body: JSON.stringify({ ...formProps, category: categoryValue, receivedFund: receivedFundValue, }), }) .then((response) => response.json()) .then((data) => { showSnackBar(data.message); submitButton.removeAttribute(""disabled""); submitButton.innerHTML = submitButtonText; resetInputValues(); }) .catch((error) => { showSnackBar(""Something went wrong! Please try again later"", ""danger""); submitButton.removeAttribute(""disabled""); submitButton.innerHTML = submitButtonText; console.error(""Error:"", error); }); }; function resetInputValues() { nameInput.value = """"; projectNameInput.value = """"; contactEmailInput.value = """"; projectLinksInput.value = """"; projectDescriptionInput.value = """"; document.querySelector( 'input[name=""receivedFund""]:checked' ).checked = false; document.getElementById(""receivedFundOneFieldValue"").value = """"; projectTokenomicsInput.value = """"; achievementGoalInput.value = """"; projectTimelinesInput.value = """"; projectMilestonesInput.value = """"; fundingBreakdownInput.value = """"; additionalAttachmentsInput.value = """"; document.querySelector( 'input[name=""projectFunding""]:checked' ).checked = false; document.querySelector('input[name=""category""]:checked').checked = false; document.getElementById(""otherCategoryFieldValue"").value = """"; } function selectCategoryOtherRadioButton() { document.getElementById(""otherRadioButton"").checked = true; } function selectReceivedFundOneRadioButton() { document.getElementById(""receivedFundOne"").checked = true; } function showSnackBar(text = """", variant = ""normal"") { const snackbarDiv = document.getElementById(""snackbar""); const snackbarText = document.getElementById(""snackbar_text""); snackbarText.innerHTML = text; // Add the ""show"" class to DIV snackbarDiv.className = ""snackbar__show""; if (variant === ""danger"") { snackbarDiv.className += "" snackbar__danger""; } // After 3 seconds, remove the class names from DIV setTimeout(function () { snackbarDiv.className = """"; }, 3000); } </script>"
decentralisation,decentralisation. 
decentralisation,"What are Decentralized Systems?. A decentralized system is an interconnected system if no single entity (individual, organization, or group) is the sole authority. In a decentralized system, control and decision-making is in the hands of those participating in the system and they have (more or less) equal standing in terms of influence. This is in contrast to a centralized system where a single authority is above all others in terms of rights and privileges. A good example of a decentralized system is an ant colony, where control is distributed among the colony's members. Without any form of central control, an ant colony successfully achieves its goals, performs all its required tasks, and effectively responds to the ever changing conditions on the colony's environment through the collective contribution of the individual ants. Another great example is when you fly internationally from one place to another. There are numerous participants working together and communicating efficiently to make that a seamless experience without there being a central unit that manages and plans it all. **There are two key characteristics of decentralized systems:** * **Equality of participants**: all participants contribute towards the system's decision-making and control, and each of them takes an active role in managing the system. * **Lack of central authorities**: It is not that decentralized systems lack the authority to make changes to the management of the network, rather this authority is distributed among the participants. The system is run by the participants for the benefit of the participants."
decentralisation,"Decentralized vs Distributed. These are very easy to get confused, and sometimes it seems they are used interchangeably but they are actually quite different. A decentralized system is one where there is a lack of central authorities. A distributed system is a system in which the physical location of the participants, the servers, the nodes, and whatever other components involved are in different places. So instead of the system being physically all in one place, different parts of the system are located on physically different places and the processing of tasks are shared between them. The most obvious example of a distributed system is cloud computing, where tasks are shared among numerous computers or a database hosted on more than one computer. What determines whether a system is decentralized or not is whether or not there are central authorities. What determines whether a system is distributed is whether the processing is done in one or multiple physical locations."
decentralisation,"Decentralized vs Centralized. In a centralized system, there is a central authority that manages the system, makes decisions about how it is run and exercises control over the other components of the system. Some examples of centralized systems: * Expedia: Hotel owners and people looking for hotel rooms connect to each other through Expedia, rather than communicating and transacting directly together. * Messaging services such as WhatsApp: People communicate with each other through a centrally controlled and owned messaging service. * Amazon: Buyers and sellers interact commercially through Amazon. * Client-server model: Clients interact with each other only through the server, a great example of this is email where communication between two users goes through a server."
decentralisation,"Why are Decentralized Systems Useful?. Decentralized systems are useful because they are open and democratic, more transparent, and they are run solely in the interests of their participants by their participants."
decentralisation,"Positive Characteristics. These are some of the key benefits of decentralized systems: * **Democratic**: Decentralized systems require participation in order to successfully function, and therefore they are naturally democratic. * **Open**: Participants can freely join or leave as they wish. The system is open to new participants and does not stop existing ones leaving. * **Public**: Because decentralized systems need to be managed and run by their participants (democratic) and anyone can in principle join the system or leave (open), these systems are __often__ public and their inner workings are not kept confidential. * **Transparent**: In order for the participants of a decentralized system to contribute to its liveliness, they must be made aware of how the system works, how it is managed, and so on. Decentralized systems therefore tend to be quite transparent. * **Trust Minimisation**: The fact that in decentralized systems, participants do not have to go through central authorities to interact with others and achieve their goals means there is no need to trust central entities to handle your needs. Any guarantees needed by the system has to be provided by the system itself and the way it is designed, and (due to transparency) this is typically well known."
decentralisation,"Limitations. Some of the limitations of decentralized systems: * **Speed**: Decentralized systems are often slower than centralized systems. Because there is more than one decision maker, decisions have to be made by consensus in the group and arriving at that consensus takes more time than a single entity making the decision. * **Efficiency**: In decentralized systems, decision making about the system requires participation. This makes it far slower to make changes to the system as it takes time for participants to agree to changes. Also because the system is open, so participants can leave/join as they wish, then the system has to be designed to cope with an often changing number of participants. All this added complexity inevitably affects the efficiency of the system's operation. * **Control**: Because a decentralized system is often run collectively by its participants, controlling how the system is managed and the direction of its development is difficult. * **Simplicity**: For any system, it is often more complex to engineer a decentralized version with more than one decisions maker than a centralized one that achieves the same goals via central decision-makers and enforcers."
