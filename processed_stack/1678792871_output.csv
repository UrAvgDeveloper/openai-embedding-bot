title,text
cosmpy.aerial.tx,"cosmpy.aerial.tx. <a id=""cosmpy.aerial.tx""></a> # cosmpy.aerial.tx Transaction. <a id=""cosmpy.aerial.tx.TxState""></a>"
cosmpy.aerial.tx,"TxState Objects. Transaction state. **Arguments**: - : Draft, Sealed, Final <a id=""cosmpy.aerial.tx.SigningMode""></a>"
cosmpy.aerial.tx,"SigningMode Objects. Signing mode. **Arguments**: - : Direct <a id=""cosmpy.aerial.tx.SigningCfg""></a>"
cosmpy.aerial.tx,"SigningCfg Objects. Transaction signing configuration. <a id=""cosmpy.aerial.tx.SigningCfg.direct""></a> #### direct Transaction signing configuration using direct mode. **Arguments**: - : public key - : sequence number **Returns**: Transaction signing configuration <a id=""cosmpy.aerial.tx.Transaction""></a>"
cosmpy.aerial.tx,"Transaction Objects. Transaction. <a id=""cosmpy.aerial.tx.Transaction.__init__""></a> #### init Init the Transactions with transaction message, state, fee and body. <a id=""cosmpy.aerial.tx.Transaction.state""></a> #### state Get the transaction state. **Returns**: current state of the transaction <a id=""cosmpy.aerial.tx.Transaction.msgs""></a> #### msgs Get the transaction messages. **Returns**: transaction messages <a id=""cosmpy.aerial.tx.Transaction.fee""></a> #### fee Get the transaction fee. **Returns**: transaction fee <a id=""cosmpy.aerial.tx.Transaction.tx""></a> #### tx Initialize. **Raises**: - : If the transaction has not been completed. **Returns**: transaction <a id=""cosmpy.aerial.tx.Transaction.add_message""></a> #### addmessage Initialize. **Arguments**: - : transaction message (memo) **Raises**: - : If the transaction is not in the draft state. **Returns**: transaction with message added <a id=""cosmpy.aerial.tx.Transaction.seal""></a> #### seal Seal the transaction. **Arguments**: - : signing configs - : transaction fee - : transaction gas limit - : transaction memo, defaults to None **Returns**: sealed transaction. <a id=""cosmpy.aerial.tx.Transaction.sign""></a> #### sign Sign the transaction. **Arguments**: - : Signer - : chain id - : account number - : deterministic, defaults to False **Raises**: - : If transaction is not sealed **Returns**: signed transaction <a id=""cosmpy.aerial.tx.Transaction.complete""></a> #### complete Update transaction state to Final. **Returns**: transaction with updated state"
cosmpy.aerial.txhelpers,"cosmpy.aerial.txhelpers. <a id=""cosmpy.aerial.tx_helpers""></a> # cosmpy.aerial.txhelpers Transaction helpers. <a id=""cosmpy.aerial.tx_helpers.MessageLog""></a>"
cosmpy.aerial.txhelpers,"MessageLog Objects. Message Log. <a id=""cosmpy.aerial.tx_helpers.TxResponse""></a>"
cosmpy.aerial.txhelpers,"TxResponse Objects. Transaction response. **Raises**: - : Out of gas error - : Insufficient fees - : Broadcast Exception <a id=""cosmpy.aerial.tx_helpers.TxResponse.is_successful""></a> #### issuccessful Check transaction is successful. **Returns**: transaction status <a id=""cosmpy.aerial.tx_helpers.TxResponse.ensure_successful""></a> #### ensuresuccessful Ensure transaction is successful. **Raises**: - : Out of gas error - : Insufficient fees - : Broadcast Exception <a id=""cosmpy.aerial.tx_helpers.SubmittedTx""></a>"
cosmpy.aerial.txhelpers,"SubmittedTx Objects. Submitted transaction. <a id=""cosmpy.aerial.tx_helpers.SubmittedTx.__init__""></a> #### init Init the Submitted transaction. **Arguments**: - : Ledger client - : transaction hash <a id=""cosmpy.aerial.tx_helpers.SubmittedTx.tx_hash""></a> #### txhash Get the transaction hash. **Returns**: transaction hash <a id=""cosmpy.aerial.tx_helpers.SubmittedTx.response""></a> #### response Get the transaction response. **Returns**: response <a id=""cosmpy.aerial.tx_helpers.SubmittedTx.contract_code_id""></a> #### contractcodeid Get the contract code id. **Returns**: return contract code id if exist else None <a id=""cosmpy.aerial.tx_helpers.SubmittedTx.contract_address""></a> #### contractaddress Get the contract address. **Returns**: return contract address if exist else None <a id=""cosmpy.aerial.tx_helpers.SubmittedTx.wait_to_complete""></a> #### waittocomplete Wait to complete the transaction. **Arguments**: - : timeout, defaults to None - : poll_period, defaults to None **Returns**: Submitted Transaction"
cosmpy.aerial.gas,"cosmpy.aerial.gas. <a id=""cosmpy.aerial.gas""></a> # cosmpy.aerial.gas Transaction gas strategy. <a id=""cosmpy.aerial.gas.GasStrategy""></a>"
cosmpy.aerial.gas,GasStrategy Objects. 
cosmpy.aerial.gas,"SimulationGasStrategy Objects. Simulation transaction gas strategy. **Arguments**: - : gas strategy <a id=""cosmpy.aerial.gas.SimulationGasStrategy.__init__""></a> #### init Init the Simulation transaction gas strategy. **Arguments**: - : Ledger client - : multiplier, defaults to None <a id=""cosmpy.aerial.gas.SimulationGasStrategy.estimate_gas""></a> #### estimategas Get estimated transaction gas. **Arguments**: - : transaction **Returns**: Estimated transaction gas <a id=""cosmpy.aerial.gas.SimulationGasStrategy.block_gas_limit""></a> #### blockgaslimit Get the block gas limit. **Returns**: block gas limit <a id=""cosmpy.aerial.gas.OfflineMessageTableStrategy""></a>"
cosmpy.aerial.gas,"OfflineMessageTableStrategy Objects. Offline message table strategy. **Arguments**: - : gas strategy <a id=""cosmpy.aerial.gas.OfflineMessageTableStrategy.default_table""></a> #### defaulttable offline message strategy default table. **Returns**: offline message default table strategy <a id=""cosmpy.aerial.gas.OfflineMessageTableStrategy.__init__""></a> #### init Init offline message table strategy. **Arguments**: - : Fallback gas limit, defaults to None - : Block limit, defaults to None <a id=""cosmpy.aerial.gas.OfflineMessageTableStrategy.update_entry""></a> #### updateentry Update the entry of the transaction. **Arguments**: - : transaction type - : gas limit <a id=""cosmpy.aerial.gas.OfflineMessageTableStrategy.estimate_gas""></a> #### estimategas Get estimated transaction gas. **Arguments**: - : transaction **Returns**: Estimated transaction gas <a id=""cosmpy.aerial.gas.OfflineMessageTableStrategy.block_gas_limit""></a> #### blockgaslimit Get the block gas limit. **Returns**: block gas limit"
cosmpy.aerial.faucet,"cosmpy.aerial.faucet. <a id=""cosmpy.aerial.faucet""></a> # cosmpy.aerial.faucet Ledger faucet API interface. <a id=""cosmpy.aerial.faucet.FaucetApi""></a>"
cosmpy.aerial.faucet,"FaucetApi Objects. Faucet API. <a id=""cosmpy.aerial.faucet.FaucetApi.__init__""></a> #### init Init faucet API. **Arguments**: - : Ledger network configuration. **Raises**: - : Network config has no faucet url set <a id=""cosmpy.aerial.faucet.FaucetApi.get_wealth""></a> #### getwealth Get wealth from the faucet for the provided address. **Arguments**: - : the address. **Raises**: - : Unable to create faucet claim - : Failed to check faucet claim status - : Failed to get wealth for address - : Faucet claim check timed out"
cosmpy.aerial.config,"cosmpy.aerial.config. <a id=""cosmpy.aerial.config""></a> # cosmpy.aerial.config Network configurations. <a id=""cosmpy.aerial.config.NetworkConfigError""></a>"
cosmpy.aerial.config,"NetworkConfigError Objects. Network config error. **Arguments**: - : Runtime error <a id=""cosmpy.aerial.config.NetworkConfig""></a>"
cosmpy.aerial.config,"NetworkConfig Objects. Network configurations. **Raises**: - : Network config error - : Runtime error <a id=""cosmpy.aerial.config.NetworkConfig.validate""></a> #### validate Validate the network configuration. **Raises**: - : Network config error <a id=""cosmpy.aerial.config.NetworkConfig.fetchai_dorado_testnet""></a> #### fetchaidoradotestnet Fetchai dorado testnet. **Returns**: Network configuration <a id=""cosmpy.aerial.config.NetworkConfig.fetchai_alpha_testnet""></a> #### fetchaialphatestnet Get the fetchai alpha testnet. **Raises**: - : No alpha testnet available <a id=""cosmpy.aerial.config.NetworkConfig.fetchai_beta_testnet""></a> #### fetchaibetatestnet Get the Fetchai beta testnet. **Raises**: - : No beta testnet available <a id=""cosmpy.aerial.config.NetworkConfig.fetchai_stable_testnet""></a> #### fetchaistabletestnet Get the fetchai stable testnet. **Returns**: fetchai stable testnet. For now dorado is fetchai stable testnet. <a id=""cosmpy.aerial.config.NetworkConfig.fetchai_mainnet""></a> #### fetchaimainnet Get the fetchai mainnet configuration. **Returns**: fetch mainnet configuration <a id=""cosmpy.aerial.config.NetworkConfig.fetch_mainnet""></a> #### fetchmainnet Get the fetch mainnet. **Returns**: fetch mainnet configurations <a id=""cosmpy.aerial.config.NetworkConfig.latest_stable_testnet""></a> #### lateststabletestnet Get the latest stable testnet. **Returns**: latest stable testnet"
cosmpy.aerial.coins,"cosmpy.aerial.coins. <a id=""cosmpy.aerial.coins""></a> # cosmpy.aerial.coins Parse the coins. <a id=""cosmpy.aerial.coins.parse_coins""></a> #### parsecoins Parse the coins. **Arguments**: - : coins **Raises**: - : If unable to parse the value **Returns**: coins"
cosmpy.aerial.exceptions,"cosmpy.aerial.exceptions. <a id=""cosmpy.aerial.exceptions""></a> # cosmpy.aerial.exceptions Exceptions. <a id=""cosmpy.aerial.exceptions.QueryError""></a>"
cosmpy.aerial.exceptions,"QueryError Objects. Invalid Query Error. <a id=""cosmpy.aerial.exceptions.NotFoundError""></a>"
cosmpy.aerial.exceptions,"NotFoundError Objects. Not found Error. <a id=""cosmpy.aerial.exceptions.QueryTimeoutError""></a>"
cosmpy.aerial.exceptions,"QueryTimeoutError Objects. Query timeout Error. <a id=""cosmpy.aerial.exceptions.BroadcastError""></a>"
cosmpy.aerial.exceptions,"BroadcastError Objects. Broadcast Error. <a id=""cosmpy.aerial.exceptions.BroadcastError.__init__""></a> #### init Init Broadcast error. **Arguments**: - : transaction hash - : message <a id=""cosmpy.aerial.exceptions.OutOfGasError""></a>"
cosmpy.aerial.exceptions,"OutOfGasError Objects. Insufficient Fess Error. <a id=""cosmpy.aerial.exceptions.OutOfGasError.__init__""></a> #### init Initialize. **Arguments**: - : transaction hash - : gas required to complete the transaction - : gas used <a id=""cosmpy.aerial.exceptions.InsufficientFeesError""></a>"
cosmpy.aerial.exceptions,"InsufficientFeesError Objects. Insufficient Fess Error. <a id=""cosmpy.aerial.exceptions.InsufficientFeesError.__init__""></a> #### init Initialize. **Arguments**: - : transaction hash - : Minimum required fee"
cosmpy.aerial.urls,"cosmpy.aerial.urls. <a id=""cosmpy.aerial.urls""></a> # cosmpy.aerial.urls Parsing the URL. <a id=""cosmpy.aerial.urls.Protocol""></a>"
cosmpy.aerial.urls,"Protocol Objects. Protocol Enum. **Arguments**: - : Enum <a id=""cosmpy.aerial.urls.ParsedUrl""></a>"
cosmpy.aerial.urls,"ParsedUrl Objects. Parse URL. **Returns**: Parsed URL <a id=""cosmpy.aerial.urls.ParsedUrl.host_and_port""></a> #### hostandport Get the host and port of the url. **Returns**: host and port <a id=""cosmpy.aerial.urls.ParsedUrl.rest_url""></a> #### resturl Get the rest url. **Returns**: rest url <a id=""cosmpy.aerial.urls.parse_url""></a> #### parseurl Initialize. **Arguments**: - : url **Raises**: - : If url scheme is unsupported **Returns**: Parsed URL"
cosmpy.aerial.wallet,"cosmpy.aerial.wallet. <a id=""cosmpy.aerial.wallet""></a> # cosmpy.aerial.wallet Wallet Generation. <a id=""cosmpy.aerial.wallet.Wallet""></a>"
cosmpy.aerial.wallet,Wallet Objects. 
cosmpy.aerial.wallet,"LocalWallet Objects. Generate local wallet. **Arguments**: - : wallet <a id=""cosmpy.aerial.wallet.LocalWallet.generate""></a> #### generate generate the local wallet. **Arguments**: - : prefix, defaults to None **Returns**: local wallet <a id=""cosmpy.aerial.wallet.LocalWallet.from_mnemonic""></a> #### frommnemonic Generate local wallet from mnemonic. **Arguments**: - : mnemonic - : prefix, defaults to None **Returns**: local wallet <a id=""cosmpy.aerial.wallet.LocalWallet.from_unsafe_seed""></a> #### fromunsafeseed Generate local wallet from unsafe seed. **Arguments**: - : text - : index, defaults to None - : prefix, defaults to None **Returns**: Local wallet <a id=""cosmpy.aerial.wallet.LocalWallet.__init__""></a> #### init Init wallet with. **Arguments**: - : private key of the wallet - : prefix, defaults to None <a id=""cosmpy.aerial.wallet.LocalWallet.address""></a> #### address Get the wallet address. **Returns**: Wallet address. <a id=""cosmpy.aerial.wallet.LocalWallet.public_key""></a> #### publickey Get the public key of the wallet. **Returns**: public key <a id=""cosmpy.aerial.wallet.LocalWallet.signer""></a> #### signer Get the signer of the wallet. **Returns**: signer"
cosmpy.aerial.client.distribution,"cosmpy.aerial.client.distribution. <a id=""cosmpy.aerial.client.distribution""></a> # cosmpy.aerial.client.distribution Distribution. <a id=""cosmpy.aerial.client.distribution.create_withdraw_delegator_reward""></a> #### createwithdrawdelegatorreward Create withdraw delegator reward. **Arguments**: - : delegator address - : validator address **Returns**: withdraw delegator reward message"
