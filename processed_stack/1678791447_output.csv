title,text
what_is_staking,"what_is_staking. **Staking** means locking up some of your tokens in order to participate in a blockchain network's operation, increase its security, and earn some passive rewards. Fetch is a public, decentralized blockchain network which uses proof-of-stake (PoS) at https://www.investopedia.com/terms/p/proof-stake-pos.asp as its consensus protocol. The operators of PoS-based networks, known as _validators_, must lock up some tokens in exchange for the right to earn rewards from their work. There are certain conditions for becoming a validator, such as staking a minimum token amount. Users with lower amounts of tokens could still participate by delegating stake to a particular validator to earn a share of the rewards that they receive. Note that the more tokens locked up, the more decision power a validator has and thus the higher the chances of them earning rewards."
what_is_staking,"Why Stake?. ,Benefits to the User: - **Earn Rewards**: Validators in the Fetch network participate in the maintenance of network's operation and earn rewards for their work. As someone who staked tokens with validators, you are eligible to earn a share of their rewards. Note that your stake could also be slashed in case a validator misbehaves and acts against the network's protocol. Therefore, you must do your own research when choosing validators to stake your tokens with. It is therefore often a good practice to distribute your tokens and stake with multiple validators. - **Voting Rights**: As a stakeholder, you will be eligible to vote on proposals for the future improvement of the network. The more you stake, the greater your influence and voting power. ,Benefits to the Network: - **Decentralization and Security**: The level of decentralization in any highly secure blockchain network is dependent on the number of validators involved in the consensus or block production. The larger the number of validators and the more distributed the total stakes, the more decentralized or safe the network is. As a result, it's always a good idea to distribute your stakes across several validators, not only to prevent staking risks but also to keep the network decentralized and secure. - **Network improvements, DAO and decentralized decision-making**: Having a DAO (Decentralized Autonomous Organization) at https://consensys.net/blog/blockchain-explained/what-is-a-dao-and-how-do-they-work/ make network enhancement decisions is an important aspect of any decentralized network. As a stakeholder, you have the right to vote on proposals that could be crucial for the network's improvement and use-cases in general. The greater the number of stakeholders, the more individuals vote on network upgrade proposals, resulting in highly decentralized decisions."
Introduction,"Introduction. # Introduction The ledger-subquery is a SubQuery at https://www.subquery.network/-based indexer for the Fetch ledger. This indexer provides a Graphql at https://www.subquery.network/ API for querying tracked entities. For a list of tracked entities, see the schema.graphql file at https://github.com/fetchai/ledger-subquery/blob/main/schema.graphql. To learn more about how to run at https://academy.subquery.network/run_publish/run.html or change this SubQuery Project at https://academy.subquery.network/quickstart/quickstart_chains/cosmos.html to get your own custom GraphQL API for your app, visit the SubQuery Academy for documentation at https://academy.subquery.network/."
Introduction,"Endpoints / Playground UIs. The graphql API endpoints also serve a playground UI to browsers for convenience. This UI is useful for rapid experimentation and iteration of queries as well as just getting some results, features include: - real-time query results - query editor: - auto-complete & validation via schema introspection - can store multiple, named queries - supports graphql variables - local persistence of query editor contents - schema reference - graphql docs reference | Network | API / Playground URL | | --- | --- | | Fetchhub (mainnet) | <a href=""https://subquery.fetch.ai"" target=""_blank"">https://subquery.fetch.ai</a> | | Dorado (testnet) | <a href=""https://subquery-dorado.fetch.ai"" target=""_blank"">https://subquery-dorado.fetch.ai</a> |"
Introduction,"Architecture. ,Component Diagram:"
Introduction,"Querying. ,Pagination: The graphql API implements the connections specification at https://relay.dev/graphql/connections.htm for pagination (see: GraphQL pagination docs at https://graphql.org/learn/pagination/#end-of-list-counts-and-connections for more). !!! tip It is recommended to prefer using pagination operators by default (e.g. ) to avoid unnecessary delays in query responses. ,Filtering: on s within a given timeframe and with a given type: ,Order by / Sorting: Each entity, by default, can be sorted by any of its respective fields. Additional support for ordering by certain fields on related entities is facilitated by custom ordering plugins generated from (see: postgraphile-docs at https://www.graphile.org/postgraphile/make-add-pg-table-order-by-plugin/). #### Block height Any entity which relates to can be ordered by a related block's field: #### Contract Code ID The entity can be sorted by through the and relations. #### Order direction Each of these custom orders are implemented in both directions, ascending and descending. These directions are accessed through the ending characters of the order enum, by choosing either and . ,Aggregation: is facilitated by the pg-aggregates plugin at https://github.com/graphile/pg-aggregates. Features include: - calculating aggregates - grouped aggregates - applying conditions to grouped aggregates - ordering by relational aggregates - filtering by the results of aggregates on related connections ,Tests as examples: Additional examples of queries and use cases can be found in the end-to-end test suite at https://github.com/fetchai/ledger-subquery/blob/main/test."
Introduction,"Entities. ,Primitive entities: _(see: schema.graphql at https://github.com/ledger-subquery/blob/main/schema.graphql)_ - blocks - transactions - messages - events - event attributes ,Entity relationship diagrams:"
Introduction,"Versioning. The versions of both the GraphQL API and the Indexer itself can be retrieved simply using the following query on the GraphQL playground. ##### Example: Each of these version numbers are stored as the value to the key within their relevant module file. These files can be found in the and directories for the Indexer and GraphQL versions, respectively. #### Entity The entity has further utility beyond the scope of the example query given prior. Using any of the relevant fields from the type definition below, internal states and config information can be retrieved with ease. ##### Example: If a developer was curious about the or whether the Indexer has passed any health checks, using , these values can be returned within the playground or otherwise connected projects."
Contributing to the SubQuery project,"Contributing to the SubQuery project. # Contributing to the SubQuery project Welcome and a big thank you for considering contributing to this SubQuery project! Together we can pave the way to a more decentralised future. What follows is a set of guidelines (not rules) for contributing to SubQuery. Following these guidelines will help us make the contribution process easy and effective for everyone involved. It also communicates that you agree to respect the time of the developers managing and developing this project. In return, we will reciprocate that respect by addressing your issue, considering changes, collaborating on improvements, and helping you finalise your pull requests."
Contributing to the SubQuery project,Code of Conduct. at https://github.com/subquery/subql/blob/contributors-guide/CODE_OF_CONDUCT.md.
Contributing to the SubQuery project,"Getting started. Contributions to our repositories are made through Issues and Pull Requests (PRs). A few general guidelines that cover both: * Search for existing Issues and PRs before creating your own. * We work hard to makes sure issues are handled in promptly but, depending on the impact, it could take a while to investigate the root cause. A friendly @ mention in the comment thread to the submitter or a contributor can help draw attention if your issue is blocking."
Contributing to the SubQuery project,"How to Contribute. ,Reporting Bugs: Bugs are tracked as GitHub issues. When logging an issue, explain the problem and include additional details to help maintainers reproduce the problem: * Use a clear and descriptive title for the issue to identify the problem. * Describe the exact steps to reproduce the problem. * Describe the behavior you observed after following the steps. * Explain which behavior you expected to see instead and why. * Include screenshots if possible. ,Submitting Pull Requests: In general, we follow the ""fork-and-pull"" Git workflow * Fork the repository to your own Github account * Clone the project to your machine * Create a branch locally with a succinct but descriptive name * Commit changes to the branch * Following any formatting and testing guidelines specific to this repo * Push changes to your fork * Open a PR in our repository ,Publishing to Github Releases: In order to publish to github release, there are prerequisites: * Firstly in the merged commit the phrase must be present * Next, you must add a description of the release in the respective package's * There must be some difference in the package compared with main * Lastly, the version must be in a format of x.y.z without '-' When a pull request to main has been accepted the workflow will try to create releases for each package where possible."
Contributing to the SubQuery project,"Coding Conventions. ,Git Commit Messages: * Use the present tense (""Add feature"" not ""Added feature"") * Use the imperative mood (""Move cursor to..."" not ""Moves cursor to..."") * Limit the first line to 72 characters or less ,JavaScript Styleguide: * All JavaScript code is linted with Prettier and ESLint"
ISSUE_TEMPLATE,"ISSUE_TEMPLATE. ### Prerequisites * [ ] Are you running the latest version(s)? * [ ] Did you check the debugging guide at https://doc.subquery.network/academy/tutorials_examples/debug-projects.html#how-to-debug-a-subquery-project? * [ ] Did you check the FAQs at https://doc.subquery.network/faqs/faqs.html and Discussions at https://github.com/subquery/subql/discussions? * [ ] Are you reporting to the correct repository? * [ ] Did you search for an existing issue or pull request? ### Description [Description of the bug or feature] ### Details These details can help to reproduce the environment the issue is occurring **Local Environment:** [You can get this information from executing .] **Query Version:** [What is the version of the query service?] **Indexer Version:** [What is the version of the indexer service?] **Network Details:** * [Network] * [Block height, a block height where the issue is happening] * [Dictionary endpoint, if used] ### Steps to Reproduce 1. [First Step] 2. [Second Step] 3. [and so on...] **Example project:** [A link to a minimal example that can reproduce the issue] **Expected behavior:** [What you expected to happen] **Actual behavior:** [What actually happened] ### Any other information Is there any other information you would like to add?"
Description,Description. # Description Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. Fixes # (issue)
Description,Type of change. Please delete options that are not relevant. - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected) - [ ] This change requires a documentation update
Description,Checklist. - [ ] I have tested locally - [ ] I have performed a self review of my changes - [ ] Updated any relevant documentation - [ ] Linked to any relevant issues - [ ] I have added tests relevant to my changes - [ ] Any dependent changes have been merged and published in downstream modules - [ ] My code is up to date with the base branch
Changelog,"Changelog. # Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog at https://keepachangelog.com/en/1.0.0/, and this project adheres to Semantic Versioning at https://semver.org/spec/v2.0.0.html. All logs must start with the format: [x.y.z] - yyyy-mm-dd"
Changelog,[Unreleased]. 
Changelog,"[1.1.0] - 2022-08-11. ,Changed: - Update to v10 (#1230)"
Changelog,"[1.0.1] - 2022-07-05. ,Fixed: - Tidy up dependency, move to common packages (#1160)"
Changelog,[1.0.0] - 2022-05-11. - Major release
Changelog,"[0.1.0] - 2022-05-06. ,Changed: - Update polkadot/api to 9"
Changelog,"Changelog. # Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog at https://keepachangelog.com/en/1.0.0/, and this project adheres to Semantic Versioning at https://semver.org/spec/v2.0.0.html. All logs must start with the format: [x.y.z] - yyyy-mm-dd"
Changelog,[Unreleased]. 
Changelog,"[1.5.0] - 2022-08-11. ,Fixed: - Fix db selection in configuration when subscription is enabled (#1241) - Fork OrderByAggregatesPlugin and modify to be compatible with historical feature (#1242) - Fix block height being applied to all queries (#1238) ,Changed: - Move aggregation feature out from and apply it by default, can be control though flag."
Changelog,"[1.4.0] - 2022-07-27. ,Added: - Add flag, by enable this console will log actual SQL statement been queried. (#1192)"
Changelog,"[1.3.0] - 2022-07-05. ,Changed: - Try to catch error if create server failed, also give retry build schema (#1153) ,Fixed: - Fix tests (#1160)"
Changelog,"[1.2.1] - 2022-06-27. ,Fixed: subql-query doesn't show all help docs issue (#1137)"
Changelog,"[1.2.0] - 2022-06-22. ,Added: - added and configuration for pg pool (#1108)"
Changelog,"[1.1.1] - 2022-06-02. ,Changed: - Now query-complexity is indicated in header (#1088)"
Changelog,"[1.1.0] - 2022-05-31. ,Added: - Experimental feature: Support query by block number, require enable by indexing node (#992)"
Changelog,[1.0.0] - 2022-05-11. - Major release
Changelog,"[0.16.1] - 2022-05-06. ,Changed: - Bump with"
Changelog,"[0.16.0] - 2022-05-02. ,Added: - Add utils package (#928) - Allow set query-complexity for query (#923)"
Changelog,"[0.15.0] - 2022-04-26. ,Added: - Add support for querying historical state (#859)"
Changelog,"[0.14.1] - 2022-04-04. ,Changed: - Bump with"
Changelog,"[0.14.0] - 2022-04-04. ,Changed: - move subscription to dedicate flag (#867)"
Changelog,"[0.13.0] - 2022-03-22. ,Added: - Add GraphQL subscription support (#846)"
Changelog,"[0.12.0] - 2022-02-09. ,Added : - Add in metadata (#773)"
Changelog,"[0.11.0] - 2022-01-21. ,Added : - Enable full aggregates support when , and group-by only when (#765)"
Changelog,"[0.10.0] - 2022-01-13. ,Added : - Add rowCountEstimate to Metadata (#736) - Support allocate port automatically (#739)"
Changelog,"[0.9.0] - 2021-12-16. ,Changed: - Limit query record size to 100, though by using can remove this limit. (#644) - Update to handle when subqueries table has been deprecated (#683) - Update to use (#640) ,Added: - Add query log to file (#667) ,Fixed: - Fix fetch metadata (#700)"
Changelog,"[0.8.0] - 2021-11-19. ,Added: - Support enum in postgraphile plugin (#551) ,Changed: - Update to support fetch from both api and table (#555)"
Changelog,"[0.7.4] - 2021-11-03. ,Changed: - Bump dependencies (#584)"
Changelog,"[0.7.3] - 2021-09-25. ,Fixed: - Change back, and use to omit node class. By doing this, previous project that rely on query won't be affected, such as Dictionaries."
Changelog,"[0.7.2] - 2021-09-22. ,Changed: query indexer to , current is created from indexer service included data (#489)"
Changelog,"[0.7.1] - 2021-08-27. ,Fixed: - Deprecated warnings (#448)"
Changelog,"[0.7.0] - 2021-06-25. ,Changed: - Update dependencies (#358)"
Changelog,"[0.6.0] - 2021-06-22. ,Added: - Allow query service to query indexer metadata though add (#327) - Add in the query schema (#327) ,Changed: - change and type to . (#347)"
Changelog,"[0.5.0] - 2021-04-20. ,Added: - Remove in query schema, please use instead (#260) - annotation is now supported in which allows you to store structured data JSON data in a single database field - We'll automatically generate coresponding JSON interfaces when querying this data (#275) - Read more about how you can use this in our updated docs at https://doc.subquery.network/create/graphql.html#json-type"
Changelog,"[0.4.0] - 2021-03-25. ,Added: - support filter for condition search (#240)"
Changelog,"[0.3.2] - 2021-03-11. ,Fixed: - add dependency of @subql/common for @subql/query (#233)"
Changelog,"[0.3.1] - 2021-03-11. ,Fixed: - fix wrong cross package imports (#231)"
Changelog,"[0.3.0] - 2021-03-11. ,Added: - refactor logger: support --output-fmt and --log-level (#220) - use read db host (DB_HOST_READ from env) as priority (#221)"
Changelog,"[0.2.0] - 2021-02-05. ,Added: - init query service project - customise first/last plugin to give max record to query (#114) - disable debug mode in production (#115) - overwrite plugin to fix one to one unique key check - update query publish and docker build process [Unreleased]: https://github.com/subquery/subql/compare/query/0.12.0...HEAD [0.12.0]: https://github.com/subquery/subql/compare/query/0.11.0...query/0.12.0 [0.11.0]: https://github.com/subquery/subql/compare/query/0.10.0...query/0.11.0 [0.10.0]: https://github.com/subquery/subql/compare/query/0.9.0...query/0.10.0 [0.9.0]: https://github.com/subquery/subql/compare/query/0.8.0...query/0.9.0 [0.8.0]: https://github.com/subquery/subql/compare/query/0.7.4...query/0.8.0 [0.7.4]: https://github.com/subquery/subql/compare/query/0.7.3...query/0.7.4 [0.5.0]: https://github.com/subquery/subql/compare/v0.4.0...v0.5.0 [0.4.0]: https://github.com/subquery/subql/compare/v0.3.2...v0.4.0 [0.3.2]: https://github.com/subquery/subql/compare/v0.3.1...v0.3.2 [0.3.1]: https://github.com/subquery/subql/compare/v0.3.0...v0.3.1 [0.3.0]: https://github.com/subquery/subql/compare/v0.2.0...v0.3.0"
Changelog,"Changelog. # Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog at https://keepachangelog.com/en/1.0.0/, and this project adheres to Semantic Versioning at https://semver.org/spec/v2.0.0.html. All logs must start with the format: [x.y.z] - yyyy-mm-dd"
Changelog,[Unreleased]. 
Changelog,"[1.4.1] - 2022-08-11. ,Fixed: - Bump version for missing update in previous release"
Changelog,"[1.4.0] - 2022-08-04. ,Added: - Support for Algorand projects (#1228)"
Changelog,"[1.3.0] - 2022-07-27. ,Changed: - Update dependencies with"
Changelog,"[1.2.2] - 2022-07-12. ,Fixed: - Fix test (#1174)"
Changelog,"[1.2.1] - 2022-07-05. ,Fixed: - Tidy up dependency, move to common packages (#1160)"
Changelog,"[1.2.0] - 2022-06-22. ,Changed: - move out terra pacakges (#1112) ,Added: - validate deployment, validate multi network (#1115)"
Changelog,"[1.1.0] - 2022-05-31. ,Changed: - Update import types name (#1012)"
Changelog,[1.0.0] - 2022-05-11. - Major release
Changelog,"[0.6.0] - 2022-04-06. ,Added: - Add validation to support manifest 1.0.0, add rules for runner (#845)"
Changelog,"[0.5.0] - 2022-04-04. ,Added: - Add terra project validation (#781)"
Changelog,"[0.4.5] - 2022-02-24. ,Changed: - Bump with subql/common release, as has been updated."
Changelog,"[0.4.4] - 2022-02-15. ,Fixed: - Fix chainTypes validation when load from yaml or json (#804)"
Changelog,"[0.4.3] - 2022-02-09. ,Changed: - Move readers from validator to common (#551) - Include dynamic datasource in manifest v0.2.1 to custom-ds-validation (#773)"
Changelog,"[0.4.2] - 2022-01-13. ,Changed: - Version bump with subql/common"
Changelog,"[0.4.1] - 2021-12-16. ,Fixed : - Fix chain types checking when load from js (#720)"
Changelog,"[0.4.0] - 2021-11-19. ,Added: ipfs-reader and update reader (#486) - Add validator that runs custom ds processor validation (#596) ,Changed: - Bump deps (#584) - Move to Common (#610) ,Fixed: - Fix validating custom DS if location param is provided (#639)"
Changelog,"[0.3.0] - 2021-10-12. ,Added: - Add validation for manifest v0.2.0 (#495) - Add manifest valitation (#477)"
Changelog,"[0.2.0] - 2021-06-25. ,Changed: - Update dependencies (#358)"
Changelog,"[0.1.0] - 2021-03-11. ,Added: - init release: support validation of subquery project [Unreleased]: https://github.com/subquery/subql/compare/v0.4.3...HEAD [0.4.3]: https://github.com/subquery/subql/compare/query/0.4.2...query/0.4.3 [0.4.2]: https://github.com/subquery/subql/compare/query/0.4.1...query/0.4.2 [0.4.1]: https://github.com/subquery/subql/compare/query/0.4.0...query/0.4.1 [0.4.0]: https://github.com/subquery/subql/compare/query/0.3.0...query/0.4.0"
Changelog,"Changelog. # Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog at https://keepachangelog.com/en/1.0.0/, and this project adheres to Semantic Versioning at https://semver.org/spec/v2.0.0.html. All logs must start with the format: [x.y.z] - yyyy-mm-dd"
Changelog,[Unreleased]. 
Changelog,"[1.4.0] - 2022-08-17. ,Changed: - Support new templates mono-repo structure. (#1236)"
Changelog,"[1.3.0] - 2022-08-11. ,Added: - Add Algorand to constants (#1228)"
Changelog,"[1.2.2] - 2022-07-27. ,Fixed: - , and are no longer supported runner versions."
Changelog,"[1.2.1] - 2022-07-05. ,Fixed: - Tidy up dependency, move to common packages (#1160)"
Changelog,"[1.2.0] - 2022-06-22. ,Added: - Add method to distinguish network family from project with spec above 1.0.0 (#1115)"
Changelog,"[1.1.0] - 2022-05-31. ,Fixed: - Fix runner error check with pre-release (#1027) ,Added: - Add constants for Mmr query api (#968)"
Changelog,[1.0.0] - 2022-05-11. - Major release
Changelog,"[0.23.0] - 2022-05-11. ,Fixed: - Fix toDeployment with ds processor assets (#1000) ,Added: - Add method to get path for manifest and schema, in order improve cli codegen (#1001)"
Changelog,"[0.22.0] - 2022-05-02. ,Added: - Add utils package (#928)"
Changelog,"[0.21.2] - 2021-04-27. ,Fixed: - Fix deps (#919)"
Changelog,"[0.21.1] - 2021-04-26. ,Fixed: - Fix Terra dictionary queries type (#893)"
Changelog,"[0.21.0] - 2021-04-06. ,Add: types for manifest 1.0.0 (#845)"
Changelog,"[0.20.0] - 2021-04-04. ,Changed: - Update to use v3.9.9 (#870)"
Changelog,"[0.19.0] - 2021-03-01. ,Changed: - Moved substrate components to"
Changelog,"[0.18.0] - 2021-02-24. ,Fixed : - Fix function call from calling itself (#808) ,Changed: - Update readers to support reader project from its manifest file (#800)"
Changelog,"[0.17.0] - 2021-02-09. ,Added: - Add manifest v0.2.1 to support dynamic data source ,Changed : - Move readers from validator to common and use them for loading projects in the node (#511) ,Fixed: - Add missing interfaces to common classes (#782)"
Changelog,"[0.16.0] - 2021-01-13. ,Added : - Add rowCountEstimate to Metadata (#736) - Add method (#739)"
Changelog,"[0.15.0] - 2021-12-16. ,Added : - Support provide and option with logger. (#667) - Add support for loading chaintypes from js (#698) ,Fixed: load js file in sandbox (#717)"
Changelog,"[0.14.1] - 2021-11-30. ,Fixed: - Remove auto generated enum types for codegen (#680) - Remove auto generated enum types in entities and relations (#682)"
Changelog,"[0.14.0] - 2021-11-19. ,Added: - Add TypeClass, supported types mapping , support float type(#532) - Refactor dictionary gql queries (#613) - Process enum in entities (#551) ,Changed: - Moved isCustomDs and isRuntimeDs to here (#610) - Remove descriptive field in deployment (#637)"
Changelog,"[0.13.0] - 2021-11-03. ,Added: - Add to to project CustomDataSourceBase (#547) - Add and rule to project CustomDataSourceBase, improve Moonbeam EVM (#593); - Move and under (#598) ,Changed: - Bump dependencies (#584) ,Fixed: - Allow dictionary in ProjectManifest v0.2.0 (#578)"
Changelog,"[0.12.0] - 2021-10-26. ,Changed: - Move project manifest types to @subql/types because it is now also required by subquery project. (#512)"
Changelog,"[0.11.0] - 2021-10-12. ,Added: - Support for new project manifest spec v0.2.0. Which has many improvements including, no longer requiring the package.json file, multiple code entry points, referencing files via other protocols such as IPFS (#495)"
Changelog,"[0.10.1] - 2021-08-27. ,Fixed: - Deprecated warnings and remove unused dependency (#448)"
Changelog,"[0.10.0] - 2021-08-20. ,Added: - Add Bytes type (#432)"
Changelog,"[0.9.2] - 2021-07-29. ,Fixed: - Fix types in entities, also add validation for schema input types. (#406)"
Changelog,"[0.9.1] - 2021-07-26. ,Fixed: bug that prevented indexes from being added automatically on foreign keys (#371)"
Changelog,"[0.9.0] - 2021-06-25. ,Added: - Add metadata type for query and additional rule of dictionary for project validation(#342) ,Changed: - Update dependencies (#358)"
Changelog,"[0.8.3] - 2021-05-04. ,Added: - Indexing is automatically added into JSON field types in database to speed up query performance. Users should not add the annotation to any as it will be automatically managed during the codegen process. We implement GIN indexes for JSON fields in our database (#291)"
Changelog,"[0.8.2] - 2021-04-21. ,Added: - Enforce index on foreign key field (#285)"
Changelog,"[0.8.0] - 2021-04-20. ,Fixed: - We now support injecting a custom logger into your project that can accept different logging levels (#248) - Read more about it in our updated documentation at https://doc.subquery.network/create/introduction.html#logging ,Added: - Support network filter for dataSources (#247) - Support @index in schema.graphql (#271) - Support json type in schema.graphql (#275)"
Changelog,"[0.7.0] - 2021-03-11. ,Added: - support type Boolean in graphql schema (#216) - refactor to build relationship of entities from grahql schema (#212) - refactor logger to @subql/common (#220)"
Changelog,"[0.6.1] - 2021-02-15. ,Changed: - bump dependencies (#148)"
Changelog,"[0.6.0] - 2021-01-27. ,Fixed: - pin class-transfermer to 0.3.1 (#116)"
Changelog,"[0.5.0] - 2021-01-25. ,Added: - support specVersion filter and success filter (#106) - support other custom types option that @polkadot/api has (#107)"
Changelog,"[0.4.0] - 2021-01-12. ,Changed: - [BREAKING] project manifest spec updated to support custom types (#65)"
Changelog,"[0.3.0] - 2021-01-06. ,Added: - support callHandler and eventHandler (#47)"
Changelog,"[0.2.0] - 2020-12-22. ,Added: - init commit [Unreleased]: https://github.com/subquery/subql/compare/common/0.17.0...HEAD [0.17.0]: https://github.com/subquery/subql/compare/common/0.16.0...common/0.17.0 [0.16.0]: https://github.com/subquery/subql/compare/common/0.15.0...common/0.16.0 [0.15.0]: https://github.com/subquery/subql/compare/common/0.14.1...common/0.15.0 [0.14.1]: https://github.com/subquery/subql/compare/common/0.14.0...common/0.14.1 [0.14.0]: https://github.com/subquery/subql/compare/common/0.13.0...common/0.14.0 [0.13.0]: https://github.com/subquery/subql/compare/common/0.12.0...common/0.13.0 [0.8.2]: https://github.com/subquery/subql/compare/v0.8.0...v0.8.2 [0.8.0]: https://github.com/subquery/subql/compare/v0.7.0...v0.8.0 [0.7.0]: https://github.com/subquery/subql/compare/v0.6.1...v0.7.0 [0.6.1]: https://github.com/OnFinality-io/subql/compare/v0.6.0...v0.6.1 [0.5.0]: https://github.com/OnFinality-io/subql/compare/v0.4.0...v0.5.0 [0.4.0]: https://github.com/OnFinality-io/subql/compare/v0.3.0...v0.4.0 [0.3.0]: https://github.com/OnFinality-io/subql/compare/v0.2.0...v0.3.0"
Changelog,"Changelog. # Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog at https://keepachangelog.com/en/1.0.0/, and this project adheres to Semantic Versioning at https://semver.org/spec/v2.0.0.html. All logs must start with the format: [x.y.z] - yyyy-mm-dd"
Changelog,[Unreleased]. 
Changelog,"[1.3.0] - 2022-08-17. ,Added: - and to the injected store. This can be used to optimise handlers and speed up indexing. (#1246)"
Changelog,"[1.2.1] - 2022-08-04. ,Fixed: - Export . (#1225)"
Changelog,"[1.2.0] - 2022-07-27. ,Changed: - Update with new filter. (#1196) - Make and types generic. This allows specifying the data/args type rather than being provided with or . (#1194)"
Changelog,"[1.1.0] - 2022-05-31. ,Changed: - Update name for substrate types (#1012)"
Changelog,[1.0.0] - 2022-05-11. - Major release
Changelog,"[0.15.0] - 2022-05-02. ,Changed: - Update polkadot 8.2.1 (#910)"
Changelog,"[0.14.0] - 2022-02-09. ,Added : - inject in global (#773)"
Changelog,"[0.13.0] - 2022-01-13. ,Changed: - Update Polkadot/api to 7.3.1 (#745)"
Changelog,"[0.12.0] - 2021-12-16. ,Added : - Add in interface (#699)"
Changelog,"[0.11.0] - 2021-11-27. ,Changed: - Update patch api type (#638)"
Changelog,"[0.10.1] - 2021-11-19. ,Changed: - Update patch api type (#638)"
Changelog,"[0.10.0] - 2021-11-03. ,Changed: - Update interface under project for Moonbeam custom datasource processor (#579) ,Added: - Add interface improve types of entity creation (#573)"
Changelog,"[0.9.0] - 2021-10-26. ,Changed: - Update Polkadot/api to v6 (#548) - Move project manifest types to @subql/types because it is now also required by subquery project. (#512)"
Changelog,"[0.8.5] - 2021-10-12. ,Changed: - Update Polkadot/api to 6.3.1 (#505)"
Changelog,"[0.8.4] - 2021-09-16. ,Changed: - Update Polkadot/api to 5.9.1 (#476)"
Changelog,"[0.8.3] - 2021-09-01. ,Changed: - Update Polkadot/api to 5.7.1 (#460)"
Changelog,"[0.8.2] - 2021-08-20. ,Changed: - Update Polkadot/api to 5.5.2 (#439)"
Changelog,"[0.8.1] - 2021-08-16. ,Changed: - Update Polkadot/api to 5.5.1 (#433)"
Changelog,"[0.8.0] - 2021-06-25. ,Changed: - Update dependencies (#358)"
Changelog,"[0.7.0] - 2021-04-20. ,Fixed: - inject logger module in global(#248) ,Added: - Expose events in SubstrateBlock (#256) - Injecting logger to sandbox's global (#259) - Store support querying by indexed field (#271)"
Changelog,[0.6.1] - 2021-03-11. 
Changelog,"[0.6.0] - 2021-01-27. ,Fixed: - fix crash for events not own by extrinsic (#120)"
Changelog,"[0.5.0] - 2021-01-25. ,Added: - patch and inject api in sandbox context (#103) - support specVersion filter and success filter (#106) ,Changed: - bump @polkadot/api to v3.6.3 (#109)"
Changelog,"[0.3.0] - 2021-01-06. ,Added: - support callHandler and eventHandler (#47)"
Changelog,"[0.2.0] - 2020-12-22. ,Added: - support block handler [Unreleased]: https://github.com/subquery/subql/compare/types/0.14.0...HEAD [0.14.0]: https://github.com/subquery/subql/compare/types/0.13.0...types/0.14.0 [0.13.0]: https://github.com/subquery/subql/compare/types/0.12.0...types/0.13.0 [0.12.0]: https://github.com/subquery/subql/compare/types/0.11.0...types/0.12.0 [0.11.0]: https://github.com/subquery/subql/compare/types/0.10.0...types/0.11.0 [0.10.1]: https://github.com/subquery/subql/compare/types/0.10.0...types/0.10.1 [0.10.0]: https://github.com/subquery/subql/compare/types/0.9.0...types/0.10.0 [0.7.0]: https://github.com/subquery/subql/compare/v0.6.1...v0.7.0 [0.6.1]: https://github.com/subquery/subql/compare/v0.6.0...v0.6.1 [0.6.0]: https://github.com/OnFinality-io/subql/compare/v0.5.0...v0.6.0 [0.5.0]: https://github.com/OnFinality-io/subql/compare/v0.3.0...v0.5.0 [0.3.0]: https://github.com/OnFinality-io/subql/compare/v0.2.0...v0.3.0"
